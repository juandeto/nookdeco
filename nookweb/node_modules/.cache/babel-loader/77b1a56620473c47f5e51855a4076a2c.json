{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\containers\\\\AdminLayout\\\\AdminLayout.js\";\nimport React, { Component } from 'react';\nimport classes from './AdminLayout.module.css';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport DataRespaldo from './../../components/Admin/DataRespaldo/DataRespaldo';\nimport DataCliente from './../../components/Admin/DataCliente/DataCliente';\nimport Spinner from './../../components/Ul/Spinner/Spinner';\n\nclass AdminLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    axios.get('https://nookweb-5fb61.firebaseio.com/orders.json?auth=' + this.props.token).then(response => {\n      let data;\n      let arrayOrders = [...this.state.orders];\n\n      for (data in response.data) {\n        let obj = response.data[data];\n        console.log(obj);\n        arrayOrders.push(obj);\n      }\n\n      this.setState({\n        orders: arrayOrders\n      });\n      this.setState({\n        loading: false\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n      console.log(err);\n    });\n  }\n\n  render() {\n    let clasesPago = [classes.nopagado];\n    let clasesEntregado = [classes.noentregado];\n    let orders = this.state.orders.map((order, i) => {\n      if (order.pagado) {\n        clasesPago.push(classes.pagado);\n      }\n\n      if (order.entregado) {\n        clasesPago.push(classes.entregado);\n      }\n\n      let pagado = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: clasesPago.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }\n      }, \"PAGADO\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 92\n        }\n      }, \"cambiar a NO PAGADO\"));\n\n      if (!order.pagado) {\n        pagado = /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: clasesPago.join(' '),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 40\n          }\n        }, \"NO PAGADO\"), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 95\n          }\n        }, \"cambiar a PAGADO\"));\n      }\n\n      let entregado = /*#__PURE__*/React.createElement(\"label\", {\n        className: clasesEntregado.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }\n      }, order.entregado ? 'ENTREGADO' : 'NO ENTREGADO', /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 120\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"details\", {\n        className: classes.orden,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"summary\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }\n      }, order.orderData.nombre), /*#__PURE__*/React.createElement(Moment, {\n        format: \"DD/MM/YYYY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 68\n        }\n      }, \" className=\", classes.date, \">\", order.date)), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.dataOrden,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.pagosContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, pagado), entregado, /*#__PURE__*/React.createElement(DataRespaldo, {\n        basket: order.basket,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DataCliente, {\n        cliente: order.orderData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      })));\n    });\n\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.AdminLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Admin\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.logoutBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.orderContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, orders));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, null)(AdminLayout);","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/containers/AdminLayout/AdminLayout.js"],"names":["React","Component","classes","connect","axios","Moment","DataRespaldo","DataCliente","Spinner","AdminLayout","state","orders","loading","componentDidMount","setState","get","props","token","then","response","data","arrayOrders","obj","console","log","push","catch","err","render","clasesPago","nopagado","clasesEntregado","noentregado","map","order","i","pagado","entregado","join","orden","orderData","nombre","date","dataOrden","pagosContainer","basket","title","logoutBtn","orderContainer","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport classes from './AdminLayout.module.css';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport DataRespaldo from './../../components/Admin/DataRespaldo/DataRespaldo';\r\nimport DataCliente from './../../components/Admin/DataCliente/DataCliente';\r\nimport Spinner from './../../components/Ul/Spinner/Spinner';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n    state={\r\n        orders:[],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading: true})\r\n        axios.get('https://nookweb-5fb61.firebaseio.com/orders.json?auth=' + this.props.token)\r\n        .then(response => {\r\n            \r\n            let data;\r\n            let arrayOrders=[...this.state.orders]\r\n            for(data in response.data){\r\n                let obj =response.data[data];\r\n                console.log(obj)\r\n                arrayOrders.push(obj)\r\n            }\r\n            this.setState({orders: arrayOrders})\r\n           this.setState({loading: false})\r\n\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false})\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n     \r\n    render() { \r\n            let clasesPago=[classes.nopagado]\r\n            let clasesEntregado=[classes.noentregado]\r\n\r\n            let orders=this.state.orders.map((order, i)=>{\r\n            if(order.pagado){\r\n                clasesPago.push(classes.pagado)\r\n            }\r\n            if(order.entregado){\r\n                clasesPago.push(classes.entregado)\r\n            }\r\n            let pagado=<React.Fragment><span className={clasesPago.join(' ')}>PAGADO</span><span>cambiar a NO PAGADO</span></React.Fragment>\r\n            if(!order.pagado){\r\n                pagado=<React.Fragment><span className={clasesPago.join(' ')}>NO PAGADO</span><span>cambiar a PAGADO</span></React.Fragment>\r\n            }\r\n            let entregado=<label className={clasesEntregado.join(' ')}>{order.entregado ? 'ENTREGADO' : 'NO ENTREGADO'}<input type=\"checkbox\"/></label>\r\n\r\n            return(\r\n                <details className={classes.orden} key={i}>\r\n                    <summary><span>{order.orderData.nombre}</span ><Moment format=\"DD/MM/YYYY\"> className={classes.date}>{order.date}</Moment></summary>\r\n                    <div className={classes.dataOrden}>\r\n                    <div className={classes.pagosContainer}>{pagado}</div> \r\n                    {entregado}       \r\n                    <DataRespaldo basket={order.basket}/>\r\n                    <DataCliente cliente={order.orderData}/>\r\n                    </div>\r\n                </details>\r\n            );\r\n        })\r\n\r\n        if(this.state.loading){\r\n            return <Spinner />\r\n        }\r\n\r\n        return ( \r\n            <div className={classes.AdminLayout}>\r\n                <h2 className={classes.title}>Admin</h2>\r\n                <button className={classes.logoutBtn}>Logout</button>\r\n                <div className={classes.orderContainer}>\r\n                    {orders}\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = state =>{\r\n    return{\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AdminLayout);"]},"metadata":{},"sourceType":"module"}