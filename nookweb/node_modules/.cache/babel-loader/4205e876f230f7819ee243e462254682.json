{"ast":null,"code":"import * as actionTypes from './../actions/actionTypes';\nconst initialState = {\n  basket: [],\n  show: false,\n  totalPrice: 0,\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_BASKET:\n      return { ...state,\n        basket: [...state.basket, action.producto]\n      };\n\n    case actionTypes.REMOVE_FROM_BASKET:\n      const index = state.basket.findIndex(product => product.precioParticular === action.precio);\n      let newBasket = [...state.basket];\n      newBasket.splice(index, 1);\n      console.log(index, newBasket);\n      return { ...state,\n        basket: newBasket\n      };\n\n    case actionTypes.GET_TOTAL_PRICE:\n      let totalPrice = 0;\n\n      if (action.basket.length > 0) {\n        let arrayPrice = [];\n        totalPrice = action.basket.map(item => arrayPrice.push(item.precioParticular));\n        totalPrice = arrayPrice.reduce((total, amount) => total + amount);\n      }\n\n      return { ...state,\n        totalPrice: totalPrice\n      };\n\n    case actionTypes.SHOW_INFO_BASKET:\n      return { ...state,\n        show: !state.show\n      };\n\n    case actionTypes.ON_LOADING:\n      return { ...state,\n        loading: !state.loading\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/store/reducers/carrito.js"],"names":["actionTypes","initialState","basket","show","totalPrice","loading","reducer","state","action","type","ADD_TO_BASKET","producto","REMOVE_FROM_BASKET","index","findIndex","product","precioParticular","precio","newBasket","splice","console","log","GET_TOTAL_PRICE","length","arrayPrice","map","item","push","reduce","total","amount","SHOW_INFO_BASKET","ON_LOADING"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,0BAA7B;AAGA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,MAAM,EAAE,EADQ;AAEhBC,EAAAA,IAAI,EAAE,KAFU;AAGhBC,EAAAA,UAAU,EAAE,CAHI;AAIhBC,EAAAA,OAAO,EAAE;AAJO,CAApB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAEN,YAAR,EAAsBO,MAAtB,KAAiC;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,aAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEVL,QAAAA,MAAM,EAAE,CAAC,GAAGK,KAAK,CAACL,MAAV,EAAkBM,MAAM,CAACG,QAAzB;AAFE,OAAN;;AAIJ,SAAKX,WAAW,CAACY,kBAAjB;AACI,YAAMC,KAAK,GAAEN,KAAK,CAACL,MAAN,CAAaY,SAAb,CAAwBC,OAAO,IAAGA,OAAO,CAACC,gBAAR,KAA6BR,MAAM,CAACS,MAAtE,CAAb;AACA,UAAIC,SAAS,GAAG,CAAC,GAAGX,KAAK,CAACL,MAAV,CAAhB;AACAgB,MAAAA,SAAS,CAACC,MAAV,CAAiBN,KAAjB,EAAwB,CAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBK,SAAnB;AACA,aAAM,EACF,GAAGX,KADD;AAEFL,QAAAA,MAAM,EAAEgB;AAFN,OAAN;;AAIJ,SAAKlB,WAAW,CAACsB,eAAjB;AACI,UAAIlB,UAAU,GAAC,CAAf;;AACA,UAAGI,MAAM,CAACN,MAAP,CAAcqB,MAAd,GAAuB,CAA1B,EAA4B;AACxB,YAAIC,UAAU,GAAC,EAAf;AACApB,QAAAA,UAAU,GAACI,MAAM,CAACN,MAAP,CAAcuB,GAAd,CAAkBC,IAAI,IAAIF,UAAU,CAACG,IAAX,CAAgBD,IAAI,CAACV,gBAArB,CAA1B,CAAX;AAEAZ,QAAAA,UAAU,GAAEoB,UAAU,CAACI,MAAX,CAAkB,CAACC,KAAD,EAAQC,MAAR,KAAkBD,KAAK,GAACC,MAA1C,CAAZ;AACH;;AACG,aAAM,EACF,GAAGvB,KADD;AAEFH,QAAAA,UAAU,EAAEA;AAFV,OAAN;;AAIR,SAAKJ,WAAW,CAAC+B,gBAAjB;AACI,aAAM,EACF,GAAGxB,KADD;AAEFJ,QAAAA,IAAI,EAAE,CAACI,KAAK,CAACJ;AAFX,OAAN;;AAIA,SAAKH,WAAW,CAACgC,UAAjB;AACA,aAAM,EACF,GAAGzB,KADD;AAEFF,QAAAA,OAAO,EAAE,CAACE,KAAK,CAACF;AAFd,OAAN;;AAIJ;AACI,aAAOE,KAAP;AAtCR;AAyCH,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './../actions/actionTypes';\r\n\r\n\r\nconst initialState ={\r\n    basket: [],\r\n    show: false,\r\n    totalPrice: 0,\r\n    loading: false\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_BASKET:\r\n            return{\r\n                ...state,\r\n        basket: [...state.basket, action.producto],\r\n            }\r\n        case actionTypes.REMOVE_FROM_BASKET:\r\n            const index= state.basket.findIndex( product =>product.precioParticular === action.precio);\r\n            let newBasket = [...state.basket];\r\n            newBasket.splice(index, 1);\r\n            console.log(index, newBasket)\r\n            return{\r\n                ...state,\r\n                basket: newBasket\r\n            }\r\n        case actionTypes.GET_TOTAL_PRICE:\r\n            let totalPrice=0;\r\n            if(action.basket.length > 0){\r\n                let arrayPrice=[];\r\n                totalPrice=action.basket.map(item => arrayPrice.push(item.precioParticular))\r\n  \r\n                totalPrice= arrayPrice.reduce((total, amount)=> total+amount)\r\n            }\r\n                return{\r\n                    ...state,\r\n                    totalPrice: totalPrice\r\n                }\r\n        case actionTypes.SHOW_INFO_BASKET:\r\n            return{\r\n                ...state,\r\n                show: !state.show\r\n            }\r\n            case actionTypes.ON_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: !state.loading\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}