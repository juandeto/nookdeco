{"ast":null,"code":"import React from'react';import Auxiliary from'./../../../hoc/Auxiliary';import*as actions from'./../../../store/actions/index';import{TransitionGroup,CSSTransition}from'react-transition-group';import{Route,Switch}from\"react-router-dom\";import{connect}from\"react-redux\";import Formas from\"./Formas/Formas\";import Medidas from\"./Medidas/Medidas\";import GenerosYColores from\"./GenerosYColores/GenerosYColores\";import Tachas from\"./Tachas/Tachas\";import Modelos from\"./Modelos/Modelos\";import Colores from\"./Colores/Colores\";var OpcionesRespaldo=function OpcionesRespaldo(props){var tachaSelect=function tachaSelect(tamanio,precio,tipo){if(tipo.length>0){//pongo un condicional para que si clickeas \"sin tachas\" no se despache esa accion que cambia el displayTachaOptions a true\nprops.onClickOnTacha();}props.onTachaSelected(tamanio,precio);};var tipoDeTachaSelect=function tipoDeTachaSelect(tipo){props.onTipoDeTachaSelected(tipo);};return/*#__PURE__*/React.createElement(Auxiliary,null,/*#__PURE__*/React.createElement(Route,{render:function render(_ref){var location=_ref.location;return/*#__PURE__*/React.createElement(TransitionGroup,null,/*#__PURE__*/React.createElement(CSSTransition,{key:location.key,timeout:400,className:\"fade\"},/*#__PURE__*/React.createElement(Switch,{location:location},/*#__PURE__*/React.createElement(Route,{path:props.baseUrl+\"/medidas\"},/*#__PURE__*/React.createElement(Medidas,{medidaSelected:props.respaldo.medida,medidas:props.opciones.medidas,selectMedida:props.onMedidaSelected})),/*#__PURE__*/React.createElement(Route,{path:props.baseUrl+\"/generosycolores\"},/*#__PURE__*/React.createElement(GenerosYColores,{modelo:props.respaldo.modelo,generos:props.opciones.generos,generoSelected:props.respaldo.genero,selectGenero:props.onGeneroSelected})),/*#__PURE__*/React.createElement(Route,{path:props.baseUrl+\"/colores\"},/*#__PURE__*/React.createElement(Colores,{color:props.opciones.generos,generoParaColor:props.respaldo.genero,selectColor:props.onColorSelected,colorSelected:props.respaldo.color})),/*#__PURE__*/React.createElement(Route,{path:props.baseUrl+\"/tachas\"},/*#__PURE__*/React.createElement(Tachas,{modelo:props.respaldo.modelo,displayOptions:props.displayOptions,tachas:props.opciones.tachas,selectedTacha:props.respaldo.tacha,selectTacha:tachaSelect,selectTipoDeTacha:tipoDeTachaSelect,tipoDeTacha:props.respaldo.tipoTacha})),/*#__PURE__*/React.createElement(Route,{path:props.baseUrl+\"/modelos\"},/*#__PURE__*/React.createElement(Modelos,{selectModelo:props.onModeloSelected,selectedModelo:props.respaldo.modelo,modelos:props.opciones.modelos})),/*#__PURE__*/React.createElement(Route,{path:props.baseUrl+\"/\",exact:true},/*#__PURE__*/React.createElement(Formas,{formas:props.opciones.formas,selected:props.onFormaSelected,tachaSelected:props.respaldo.forma})))));}}));};var mapStateToProps=function mapStateToProps(state){return{respaldo:state.respaldo.respaldo,displayOptions:state.respaldo.displayTachaOptions,precioRespaldo:state.respaldo.respaldo.precioParticular,basket:state.carrito.basket};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onFormaSelected:function onFormaSelected(tipo,precio){return dispatch(actions.onFormaSelected(tipo,precio));},onMedidaSelected:function onMedidaSelected(altura,ancho,precio){return dispatch(actions.onMedidaSelected(altura,ancho,precio));},onGeneroSelected:function onGeneroSelected(tipo,precio){return dispatch(actions.onGeneroSelected(tipo,precio));},onColorSelected:function onColorSelected(color){return dispatch(actions.onColorSelected(color));},onTachaSelected:function onTachaSelected(tamanio,precio){return dispatch(actions.onTachaSelected(tamanio,precio));},onTipoDeTachaSelected:function onTipoDeTachaSelected(tipo){return dispatch(actions.onTipoDeTachaSelected(tipo));},onModeloSelected:function onModeloSelected(tipo,precio){return dispatch(actions.onModeloSelected(tipo,precio));},onClickOnTacha:function onClickOnTacha(){return dispatch(actions.onClickOnTacha());}};};export default connect(mapStateToProps,mapDispatchToProps)(OpcionesRespaldo);","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Respaldo/OpcionesRespaldo/OpcionesRespaldo.js"],"names":["React","Auxiliary","actions","TransitionGroup","CSSTransition","Route","Switch","connect","Formas","Medidas","GenerosYColores","Tachas","Modelos","Colores","OpcionesRespaldo","props","tachaSelect","tamanio","precio","tipo","length","onClickOnTacha","onTachaSelected","tipoDeTachaSelect","onTipoDeTachaSelected","location","key","baseUrl","respaldo","medida","opciones","medidas","onMedidaSelected","modelo","generos","genero","onGeneroSelected","onColorSelected","color","displayOptions","tachas","tacha","tipoTacha","onModeloSelected","modelos","formas","onFormaSelected","forma","mapStateToProps","state","displayTachaOptions","precioRespaldo","precioParticular","basket","carrito","mapDispatchToProps","dispatch","altura","ancho"],"mappings":"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","sourcesContent":["import React  from 'react';\r\n\r\n\r\nimport Auxiliary from './../../../hoc/Auxiliary';\r\nimport * as actions from './../../../store/actions/index';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Formas from \"./Formas/Formas\";\r\nimport Medidas from \"./Medidas/Medidas\";\r\nimport GenerosYColores from \"./GenerosYColores/GenerosYColores\";\r\nimport Tachas from \"./Tachas/Tachas\";\r\nimport Modelos from \"./Modelos/Modelos\";\r\nimport Colores from \"./Colores/Colores\";\r\n\r\nconst OpcionesRespaldo =(props)=> {\r\n\r\n\r\n    const tachaSelect = (tamanio, precio, tipo)=>{\r\n        if(tipo.length > 0){ \r\n          //pongo un condicional para que si clickeas \"sin tachas\" no se despache esa accion que cambia el displayTachaOptions a true\r\n           props.onClickOnTacha()\r\n        }\r\n       \r\n        props.onTachaSelected(tamanio, precio)\r\n      }\r\n  \r\n      const tipoDeTachaSelect=(tipo) =>{\r\n        props.onTipoDeTachaSelected(tipo)\r\n      }\r\n  \r\n\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <Route \r\n          render={({location})=>(\r\n         <TransitionGroup>\r\n          <CSSTransition\r\n          key={location.key}\r\n          timeout={400}\r\n          className=\"fade\">\r\n          <Switch location={location}>\r\n            <Route path={props.baseUrl + \"/medidas\"}>\r\n              <Medidas\r\n              medidaSelected={props.respaldo.medida}\r\n                medidas={props.opciones.medidas}\r\n                selectMedida={props.onMedidaSelected}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/generosycolores\"}>\r\n              <GenerosYColores\r\n              modelo={props.respaldo.modelo}\r\n                generos={props.opciones.generos}\r\n                generoSelected={props.respaldo.genero}\r\n                selectGenero={props.onGeneroSelected}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/colores\"}>\r\n              <Colores\r\n                color={props.opciones.generos}\r\n                generoParaColor={props.respaldo.genero}\r\n                selectColor={props.onColorSelected}\r\n                colorSelected={props.respaldo.color}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/tachas\"}>\r\n              <Tachas\r\n                modelo={props.respaldo.modelo}\r\n                displayOptions={props.displayOptions}\r\n                tachas={props.opciones.tachas}\r\n                selectedTacha={props.respaldo.tacha}\r\n                selectTacha={tachaSelect}\r\n                selectTipoDeTacha={tipoDeTachaSelect}\r\n                tipoDeTacha={props.respaldo.tipoTacha}\r\n                \r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/modelos\"}>\r\n              <Modelos\r\n                selectModelo={props.onModeloSelected}\r\n                selectedModelo={props.respaldo.modelo}\r\n                modelos={props.opciones.modelos}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/\"} exact>\r\n              <Formas\r\n                formas={props.opciones.formas}\r\n                selected={props.onFormaSelected}\r\n                tachaSelected={props.respaldo.forma}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n          </CSSTransition>\r\n          </TransitionGroup>\r\n          )}/>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      respaldo: state.respaldo.respaldo,\r\n      displayOptions: state.respaldo.displayTachaOptions,\r\n      precioRespaldo: state.respaldo.respaldo.precioParticular,\r\n      basket: state.carrito.basket\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onFormaSelected: (tipo, precio) =>\r\n        dispatch(actions.onFormaSelected(tipo, precio)),\r\n      onMedidaSelected: (altura, ancho, precio) =>\r\n        dispatch(actions.onMedidaSelected(altura, ancho, precio)),\r\n      onGeneroSelected: (tipo, precio) =>\r\n        dispatch(actions.onGeneroSelected(tipo, precio)),\r\n      onColorSelected: (color) =>\r\n        dispatch((actions.onColorSelected(color))),\r\n      onTachaSelected: (tamanio, precio) =>\r\n        dispatch(actions.onTachaSelected(tamanio, precio)),\r\n      onTipoDeTachaSelected: (tipo) =>\r\n        dispatch(actions.onTipoDeTachaSelected(tipo)),\r\n      onModeloSelected: (tipo, precio) =>\r\n        dispatch(actions.onModeloSelected(tipo, precio)),\r\n      onClickOnTacha: ()=>dispatch(actions.onClickOnTacha())\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpcionesRespaldo)\r\n"]},"metadata":{},"sourceType":"module"}