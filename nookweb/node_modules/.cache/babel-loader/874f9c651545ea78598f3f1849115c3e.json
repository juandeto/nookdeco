{"ast":null,"code":"import React from\"react\";import classes from\"./GenerosYColores.module.css\";import ItemGenero from'./ItemGenero/ItemGenero';var GenerosYColores=function GenerosYColores(props){var form=null;if(props.modelo==='Con Funda Lisa'){// condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\nform=props.generos.filter(function(genero){return genero.tipo==='Tusor Liso';}).map(function(genero,i){return/*#__PURE__*/React.createElement(ItemGenero,{key:i,selectGenero:props.selectGenero,generoSelected:props.generoSelected,genero:genero});});}if(props.modelo==='Con Funda Rayada'){// condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\nform=props.generos.filter(function(genero){return genero.tipo==='Tusor Rayado';}).map(function(genero,i){return/*#__PURE__*/React.createElement(ItemGenero,{key:i,selectGenero:props.selectGenero,generoSelected:props.generoSelected,genero:genero});});}else{form=props.generos.filter(function(genero){return genero.tipo!==\"Tusor Liso\"&&genero.tipo!=='Tusor Rayado';}).map(function(genero,i){return/*#__PURE__*/React.createElement(ItemGenero,{key:i,selectGenero:props.selectGenero,generoSelected:props.generoSelected,genero:genero});});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.GeneroYColor+' page'},/*#__PURE__*/React.createElement(\"h2\",null,\"Elija un g\\xE9nero\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.guideline},/*#__PURE__*/React.createElement(\"span\",null,\"Tipo\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.opcionesFormas},form));};export default GenerosYColores;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores.js"],"names":["React","classes","ItemGenero","GenerosYColores","props","form","modelo","generos","filter","genero","tipo","map","i","selectGenero","generoSelected","GeneroYColor","guideline","opcionesFormas"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAEjC,GAAIC,CAAAA,IAAI,CAAE,IAAV,CAGF,GAAGD,KAAK,CAACE,MAAN,GAAiB,gBAApB,CAAqC,CAClC;AACAD,IAAI,CAAGD,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqB,SAAAC,MAAM,QAAKA,CAAAA,MAAM,CAACC,IAAP,GAAgB,YAArB,EAA3B,EACNC,GADM,CACF,SAACF,MAAD,CAASG,CAAT,CAAc,CAClB,mBAAO,oBAAC,UAAD,EAAY,GAAG,CAAEA,CAAjB,CAAoB,YAAY,CAAER,KAAK,CAACS,YAAxC,CAAsD,cAAc,CAAET,KAAK,CAACU,cAA5E,CAA4F,MAAM,CAAEL,MAApG,EAAP,CACD,CAHO,CAAP,CAKF,CACD,GAAGL,KAAK,CAACE,MAAN,GAAiB,kBAApB,CAAuC,CACrC;AACAD,IAAI,CAAGD,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqB,SAAAC,MAAM,QAAKA,CAAAA,MAAM,CAACC,IAAP,GAAgB,cAArB,EAA3B,EACNC,GADM,CACF,SAACF,MAAD,CAASG,CAAT,CAAc,CAClB,mBAAO,oBAAC,UAAD,EAAY,GAAG,CAAEA,CAAjB,CAAoB,YAAY,CAAER,KAAK,CAACS,YAAxC,CAAsD,cAAc,CAAET,KAAK,CAACU,cAA5E,CAA4F,MAAM,CAAEL,MAApG,EAAP,CACD,CAHO,CAAP,CAKD,CAPD,IAOK,CACHJ,IAAI,CAACD,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqB,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,IAAP,GAAgB,YAAhB,EAAgCD,MAAM,CAACC,IAAP,GAAgB,cAApD,EAA3B,EACJC,GADI,CACC,SAACF,MAAD,CAASG,CAAT,qBAAe,oBAAC,UAAD,EAAY,GAAG,CAAEA,CAAjB,CAAoB,YAAY,CAAER,KAAK,CAACS,YAAxC,CAAsD,cAAc,CAAET,KAAK,CAACU,cAA5E,CAA4F,MAAM,CAAEL,MAApG,EAAf,EADD,CAAL,CAED,CACC,mBACE,2BAAK,SAAS,CAAER,OAAO,CAACc,YAAR,CAAsB,OAAtC,eACE,mDADF,cAEE,2BAAK,SAAS,CAAEd,OAAO,CAACe,SAAxB,eACE,uCADF,CAFF,cAKE,2BAAK,SAAS,CAAEf,OAAO,CAACgB,cAAxB,EAAyCZ,IAAzC,CALF,CADF,CASD,CAjCD,CAmCA,cAAeF,CAAAA,eAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./GenerosYColores.module.css\";\r\nimport ItemGenero from './ItemGenero/ItemGenero';\r\n\r\nconst GenerosYColores = (props) => {\r\n\r\n  let form =null\r\n  \r\n  \r\nif(props.modelo === 'Con Funda Lisa'){\r\n   // condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\r\n   form = props.generos.filter(genero => (genero.tipo === 'Tusor Liso'))\r\n   .map((genero, i) =>{ \r\n    return(<ItemGenero key={i} selectGenero={props.selectGenero} generoSelected={props.generoSelected} genero={genero} />)\r\n  })\r\n  \r\n}\r\nif(props.modelo === 'Con Funda Rayada'){\r\n  // condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\r\n  form = props.generos.filter(genero => (genero.tipo === 'Tusor Rayado'))\r\n  .map((genero, i) =>{ \r\n   return(<ItemGenero key={i} selectGenero={props.selectGenero} generoSelected={props.generoSelected} genero={genero} />)\r\n })\r\n \r\n}else{\r\n  form=props.generos.filter(genero =>(genero.tipo !== \"Tusor Liso\" && genero.tipo !== 'Tusor Rayado'))\r\n  .map( (genero, i) =>(<ItemGenero key={i} selectGenero={props.selectGenero} generoSelected={props.generoSelected} genero={genero} />))\r\n}\r\n  return (\r\n    <div className={classes.GeneroYColor+ ' page'}>\r\n      <h2>Elija un g√©nero</h2>\r\n      <div className={classes.guideline}>\r\n        <span>Tipo</span>\r\n      </div>\r\n      <div className={classes.opcionesFormas}>{form}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerosYColores;\r\n"]},"metadata":{},"sourceType":"module"}