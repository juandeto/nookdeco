{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\components\\\\Respaldo\\\\OpcionesRespaldo\\\\OpcionesRespaldo.js\";\nimport React from 'react';\nimport Auxiliary from './../../../hoc/Auxiliary';\nimport * as actions from './../../../store/actions/index';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Formas from \"./Formas/Formas\";\nimport Medidas from \"./Medidas/Medidas\";\nimport GenerosYColores from \"./GenerosYColores/GenerosYColores\";\nimport Tachas from \"./Tachas/Tachas\";\nimport Modelos from \"./Modelos/Modelos\";\nimport Colores from \"./Colores/Colores\";\n\nconst OpcionesRespaldo = props => {\n  const tachaSelect = (tamanio, precio, tipo) => {\n    if (tipo.length > 0) {\n      //pongo un condicional para que si clickeas \"sin tachas\" no se despache esa accion que cambia el displayTachaOptions a true\n      this.props.onClickOnTacha();\n    }\n\n    this.props.onTachaSelected(tamanio, precio);\n  };\n\n  const tipoDeTachaSelect = tipo => {\n    this.props.onTipoDeTachaSelected(tipo);\n  };\n\n  let classesPrecio = [classes.precioTotal];\n\n  if (this.props.respaldo.forma !== 'no seleccionado') {\n    classesPrecio.push(classes.precioConForma);\n  }\n\n  return /*#__PURE__*/React.createElement(Auxiliary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    render: ({\n      location\n    }) => /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      key: location.key,\n      timeout: 400,\n      className: \"fade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: props.baseUrl + \"/medidas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Medidas, {\n      medidaSelected: props.respaldo.medida,\n      medidas: props.opciones.medidas,\n      selectMedida: props.onMedidaSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: props.baseUrl + \"/generosycolores\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GenerosYColores, {\n      generos: props.opciones.generos,\n      generoSelected: props.respaldo.genero,\n      selectGenero: props.onGeneroSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: props.baseUrl + \"/colores\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Colores, {\n      color: props.opciones.generos,\n      generoParaColor: props.respaldo.genero,\n      selectColor: props.onColorSelected,\n      colorSelected: props.respaldo.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: props.baseUrl + \"/tachas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tachas, {\n      displayOptions: props.displayOptions,\n      tachas: props.opciones.tachas,\n      selectedTacha: props.respaldo.tacha,\n      selectTacha: tachaSelect,\n      selectTipoDeTacha: tipoDeTachaSelect,\n      tipoDeTacha: props.respaldo.tipoTacha,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: props.baseUrl + \"/modelos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modelos, {\n      selectModelo: props.onModeloSelected,\n      selectedModelo: props.respaldo.modelo,\n      modelos: props.opciones.modelos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: props.baseUrl + \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formas, {\n      formas: props.opciones.formas,\n      selected: props.onFormaSelected,\n      tachaSelected: props.respaldo.forma,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    respaldo: state.respaldo.respaldo,\n    displayOptions: state.respaldo.displayTachaOptions,\n    precioRespaldo: state.respaldo.respaldo.precioParticular,\n    basket: state.carrito.basket\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormaSelected: (tipo, precio) => dispatch(actions.onFormaSelected(tipo, precio)),\n    onMedidaSelected: (altura, ancho, precio) => dispatch(actions.onMedidaSelected(altura, ancho, precio)),\n    onGeneroSelected: (tipo, precio) => dispatch(actions.onGeneroSelected(tipo, precio)),\n    onColorSelected: color => dispatch(actions.onColorSelected(color)),\n    onTachaSelected: (tamanio, precio) => dispatch(actions.onTachaSelected(tamanio, precio)),\n    onTipoDeTachaSelected: tipo => dispatch(actions.onTipoDeTachaSelected(tipo)),\n    onModeloSelected: (tipo, precio) => dispatch(actions.onModeloSelected(tipo, precio)),\n    onClickOnTacha: () => dispatch(actions.onClickOnTacha())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpcionesRespaldo);","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Respaldo/OpcionesRespaldo/OpcionesRespaldo.js"],"names":["React","Auxiliary","actions","TransitionGroup","CSSTransition","Route","Switch","connect","Formas","Medidas","GenerosYColores","Tachas","Modelos","Colores","OpcionesRespaldo","props","tachaSelect","tamanio","precio","tipo","length","onClickOnTacha","onTachaSelected","tipoDeTachaSelect","onTipoDeTachaSelected","classesPrecio","classes","precioTotal","respaldo","forma","push","precioConForma","location","key","baseUrl","medida","opciones","medidas","onMedidaSelected","generos","genero","onGeneroSelected","onColorSelected","color","displayOptions","tachas","tacha","tipoTacha","onModeloSelected","modelo","modelos","formas","onFormaSelected","mapStateToProps","state","displayTachaOptions","precioRespaldo","precioParticular","basket","carrito","mapDispatchToProps","dispatch","altura","ancho"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAD,IAAU;AAE9B,QAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,IAAlB,KAAyB;AACzC,QAAGA,IAAI,CAACC,MAAL,GAAc,CAAjB,EAAmB;AACjB;AACC,WAAKL,KAAL,CAAWM,cAAX;AACF;;AAED,SAAKN,KAAL,CAAWO,eAAX,CAA2BL,OAA3B,EAAoCC,MAApC;AACD,GAPH;;AASE,QAAMK,iBAAiB,GAAEJ,IAAD,IAAS;AAC/B,SAAKJ,KAAL,CAAWS,qBAAX,CAAiCL,IAAjC;AACD,GAFD;;AAIA,MAAIM,aAAa,GAAC,CAACC,OAAO,CAACC,WAAT,CAAlB;;AACA,MAAG,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,KAApB,KAA8B,iBAAjC,EAAmD;AACjDJ,IAAAA,aAAa,CAACK,IAAd,CAAmBJ,OAAO,CAACK,cAA3B;AACD;;AAEH,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACF,IAAA,MAAM,EAAE,CAAC;AAACC,MAAAA;AAAD,KAAD,kBACT,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,aAAD;AACA,MAAA,GAAG,EAAEA,QAAQ,CAACC,GADd;AAEA,MAAA,OAAO,EAAE,GAFT;AAGA,MAAA,SAAS,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEjB,KAAK,CAACmB,OAAN,GAAgB,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACA,MAAA,cAAc,EAAEnB,KAAK,CAACa,QAAN,CAAeO,MAD/B;AAEE,MAAA,OAAO,EAAEpB,KAAK,CAACqB,QAAN,CAAeC,OAF1B;AAGE,MAAA,YAAY,EAAEtB,KAAK,CAACuB,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEvB,KAAK,CAACmB,OAAN,GAAgB,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,OAAO,EAAEnB,KAAK,CAACqB,QAAN,CAAeG,OAD1B;AAEE,MAAA,cAAc,EAAExB,KAAK,CAACa,QAAN,CAAeY,MAFjC;AAGE,MAAA,YAAY,EAAEzB,KAAK,CAAC0B,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,eAeE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE1B,KAAK,CAACmB,OAAN,GAAgB,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAEnB,KAAK,CAACqB,QAAN,CAAeG,OADxB;AAEE,MAAA,eAAe,EAAExB,KAAK,CAACa,QAAN,CAAeY,MAFlC;AAGE,MAAA,WAAW,EAAEzB,KAAK,CAAC2B,eAHrB;AAIE,MAAA,aAAa,EAAE3B,KAAK,CAACa,QAAN,CAAee,KAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,eAuBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE5B,KAAK,CAACmB,OAAN,GAAgB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,cAAc,EAAEnB,KAAK,CAAC6B,cADxB;AAEE,MAAA,MAAM,EAAE7B,KAAK,CAACqB,QAAN,CAAeS,MAFzB;AAGE,MAAA,aAAa,EAAE9B,KAAK,CAACa,QAAN,CAAekB,KAHhC;AAIE,MAAA,WAAW,EAAE9B,WAJf;AAKE,MAAA,iBAAiB,EAAEO,iBALrB;AAME,MAAA,WAAW,EAAER,KAAK,CAACa,QAAN,CAAemB,SAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvBF,eAkCE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEhC,KAAK,CAACmB,OAAN,GAAgB,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,YAAY,EAAEnB,KAAK,CAACiC,gBADtB;AAEE,MAAA,cAAc,EAAEjC,KAAK,CAACa,QAAN,CAAeqB,MAFjC;AAGE,MAAA,OAAO,EAAElC,KAAK,CAACqB,QAAN,CAAec,OAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlCF,eAyCE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEnC,KAAK,CAACmB,OAAN,GAAgB,GAA7B;AAAkC,MAAA,KAAK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAEnB,KAAK,CAACqB,QAAN,CAAee,MADzB;AAEE,MAAA,QAAQ,EAAEpC,KAAK,CAACqC,eAFlB;AAGE,MAAA,aAAa,EAAErC,KAAK,CAACa,QAAN,CAAeC,KAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzCF,CAJA,CADD,CAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AA+DH,CAnFD;;AAqFA,MAAMwB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACL1B,IAAAA,QAAQ,EAAE0B,KAAK,CAAC1B,QAAN,CAAeA,QADpB;AAELgB,IAAAA,cAAc,EAAEU,KAAK,CAAC1B,QAAN,CAAe2B,mBAF1B;AAGLC,IAAAA,cAAc,EAAEF,KAAK,CAAC1B,QAAN,CAAeA,QAAf,CAAwB6B,gBAHnC;AAILC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAcD;AAJjB,GAAP;AAMD,CAPH;;AASE,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,eAAe,EAAE,CAACjC,IAAD,EAAOD,MAAP,KACf2C,QAAQ,CAAC3D,OAAO,CAACkD,eAAR,CAAwBjC,IAAxB,EAA8BD,MAA9B,CAAD,CAFL;AAGLoB,IAAAA,gBAAgB,EAAE,CAACwB,MAAD,EAASC,KAAT,EAAgB7C,MAAhB,KAChB2C,QAAQ,CAAC3D,OAAO,CAACoC,gBAAR,CAAyBwB,MAAzB,EAAiCC,KAAjC,EAAwC7C,MAAxC,CAAD,CAJL;AAKLuB,IAAAA,gBAAgB,EAAE,CAACtB,IAAD,EAAOD,MAAP,KAChB2C,QAAQ,CAAC3D,OAAO,CAACuC,gBAAR,CAAyBtB,IAAzB,EAA+BD,MAA/B,CAAD,CANL;AAOLwB,IAAAA,eAAe,EAAGC,KAAD,IACfkB,QAAQ,CAAC3D,OAAO,CAACwC,eAAR,CAAwBC,KAAxB,CAAD,CARL;AASLrB,IAAAA,eAAe,EAAE,CAACL,OAAD,EAAUC,MAAV,KACf2C,QAAQ,CAAC3D,OAAO,CAACoB,eAAR,CAAwBL,OAAxB,EAAiCC,MAAjC,CAAD,CAVL;AAWLM,IAAAA,qBAAqB,EAAGL,IAAD,IACrB0C,QAAQ,CAAC3D,OAAO,CAACsB,qBAAR,CAA8BL,IAA9B,CAAD,CAZL;AAaL6B,IAAAA,gBAAgB,EAAE,CAAC7B,IAAD,EAAOD,MAAP,KAChB2C,QAAQ,CAAC3D,OAAO,CAAC8C,gBAAR,CAAyB7B,IAAzB,EAA+BD,MAA/B,CAAD,CAdL;AAeLG,IAAAA,cAAc,EAAE,MAAIwC,QAAQ,CAAC3D,OAAO,CAACmB,cAAR,EAAD;AAfvB,GAAP;AAiBD,CAlBD;;AAoBF,eAAed,OAAO,CAAC8C,eAAD,EAAkBO,kBAAlB,CAAP,CAA6C9C,gBAA7C,CAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport Auxiliary from './../../../hoc/Auxiliary';\r\nimport * as actions from './../../../store/actions/index';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Formas from \"./Formas/Formas\";\r\nimport Medidas from \"./Medidas/Medidas\";\r\nimport GenerosYColores from \"./GenerosYColores/GenerosYColores\";\r\nimport Tachas from \"./Tachas/Tachas\";\r\nimport Modelos from \"./Modelos/Modelos\";\r\nimport Colores from \"./Colores/Colores\";\r\n\r\nconst OpcionesRespaldo =(props)=> {\r\n\r\n    const tachaSelect = (tamanio, precio, tipo)=>{\r\n        if(tipo.length > 0){ \r\n          //pongo un condicional para que si clickeas \"sin tachas\" no se despache esa accion que cambia el displayTachaOptions a true\r\n           this.props.onClickOnTacha()\r\n        }\r\n       \r\n        this.props.onTachaSelected(tamanio, precio)\r\n      }\r\n  \r\n      const tipoDeTachaSelect=(tipo) =>{\r\n        this.props.onTipoDeTachaSelected(tipo)\r\n      }\r\n  \r\n      let classesPrecio=[classes.precioTotal]\r\n      if(this.props.respaldo.forma !== 'no seleccionado'){\r\n        classesPrecio.push(classes.precioConForma)\r\n      }\r\n\r\n    return (\r\n        <Auxiliary>\r\n            <Route \r\n          render={({location})=>(\r\n         <TransitionGroup>\r\n          <CSSTransition\r\n          key={location.key}\r\n          timeout={400}\r\n          className=\"fade\">\r\n          <Switch location={location}>\r\n            <Route path={props.baseUrl + \"/medidas\"}>\r\n              <Medidas\r\n              medidaSelected={props.respaldo.medida}\r\n                medidas={props.opciones.medidas}\r\n                selectMedida={props.onMedidaSelected}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/generosycolores\"}>\r\n              <GenerosYColores\r\n                generos={props.opciones.generos}\r\n                generoSelected={props.respaldo.genero}\r\n                selectGenero={props.onGeneroSelected}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/colores\"}>\r\n              <Colores\r\n                color={props.opciones.generos}\r\n                generoParaColor={props.respaldo.genero}\r\n                selectColor={props.onColorSelected}\r\n                colorSelected={props.respaldo.color}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/tachas\"}>\r\n              <Tachas\r\n                displayOptions={props.displayOptions}\r\n                tachas={props.opciones.tachas}\r\n                selectedTacha={props.respaldo.tacha}\r\n                selectTacha={tachaSelect}\r\n                selectTipoDeTacha={tipoDeTachaSelect}\r\n                tipoDeTacha={props.respaldo.tipoTacha}\r\n                \r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/modelos\"}>\r\n              <Modelos\r\n                selectModelo={props.onModeloSelected}\r\n                selectedModelo={props.respaldo.modelo}\r\n                modelos={props.opciones.modelos}\r\n              />\r\n            </Route>\r\n            <Route path={props.baseUrl + \"/\"} exact>\r\n              <Formas\r\n                formas={props.opciones.formas}\r\n                selected={props.onFormaSelected}\r\n                tachaSelected={props.respaldo.forma}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n          </CSSTransition>\r\n          </TransitionGroup>\r\n          )}/>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      respaldo: state.respaldo.respaldo,\r\n      displayOptions: state.respaldo.displayTachaOptions,\r\n      precioRespaldo: state.respaldo.respaldo.precioParticular,\r\n      basket: state.carrito.basket\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onFormaSelected: (tipo, precio) =>\r\n        dispatch(actions.onFormaSelected(tipo, precio)),\r\n      onMedidaSelected: (altura, ancho, precio) =>\r\n        dispatch(actions.onMedidaSelected(altura, ancho, precio)),\r\n      onGeneroSelected: (tipo, precio) =>\r\n        dispatch(actions.onGeneroSelected(tipo, precio)),\r\n      onColorSelected: (color) =>\r\n        dispatch(actions.onColorSelected(color)),\r\n      onTachaSelected: (tamanio, precio) =>\r\n        dispatch(actions.onTachaSelected(tamanio, precio)),\r\n      onTipoDeTachaSelected: (tipo) =>\r\n        dispatch(actions.onTipoDeTachaSelected(tipo)),\r\n      onModeloSelected: (tipo, precio) =>\r\n        dispatch(actions.onModeloSelected(tipo, precio)),\r\n      onClickOnTacha: ()=>dispatch(actions.onClickOnTacha())\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpcionesRespaldo)\r\n"]},"metadata":{},"sourceType":"module"}