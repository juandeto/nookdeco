{"ast":null,"code":"import * as actionTypes from './../actions/actionTypes';\nconst initialState = {\n  basket: [],\n  show: false,\n  totalPrice: 0,\n  loading: false,\n  order: [],\n  formaDePago: null,\n  formaDeEnvio: null,\n  envioAlInterior: false\n};\n\nconst getTotalPrice = basket => {\n  let totalPrice = 0;\n\n  if (basket.length > 0) {\n    let arrayPrice = [];\n    totalPrice = basket.map(item => arrayPrice.push(item.precioParticular * item.cantidad));\n    totalPrice = arrayPrice.reduce((total, amount) => total + amount);\n  }\n\n  return totalPrice;\n};\n\nconst getEmbalajeCost = (envioAlInterior, provincia) => {\n  let costoEmbalaje = 0;\n\n  if (!envioAlInterior && provincia !== 'G.B.A (Gran Buenos Aires)' && provincia !== 'C.A.B.A') {\n    costoEmbalaje = 400;\n  }\n\n  if (envioAlInterior && provincia !== 'G.B.A (Gran Buenos Aires)' && provincia !== 'C.A.B.A') {\n    costoEmbalaje = 0;\n  }\n\n  if (envioAlInterior && (provincia === 'G.B.A (Gran Buenos Aires)' || provincia === 'C.A.B.A')) {\n    costoEmbalaje = -400;\n  }\n\n  return costoEmbalaje;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_BASKET:\n      return { ...state,\n        basket: [...state.basket, action.producto]\n      };\n\n    case actionTypes.REMOVE_FROM_BASKET:\n      const index = state.basket.findIndex(product => product.precioParticular === action.precio);\n      let newBasket = [...state.basket];\n      newBasket.splice(index, 1);\n      return { ...state,\n        basket: newBasket,\n        totalPrice: state.totalPrice - action.precio\n      };\n\n    case actionTypes.GET_TOTAL_PRICE:\n      return { ...state,\n        totalPrice: getTotalPrice(action.basket)\n      };\n\n    case actionTypes.SHOW_INFO_BASKET:\n      return { ...state,\n        show: !state.show\n      };\n\n    case actionTypes.CREATE_ORDER:\n      return { ...state,\n        order: action.order\n      };\n\n    case actionTypes.FORMA_DE_PAGO:\n      let descuento = 0.8;\n      let nuevoPrecio = state.totalPrice;\n\n      if (action.formaDePago === \"Transferencia Bancaria\") {\n        nuevoPrecio = nuevoPrecio * descuento;\n      }\n\n      if (action.formaDePago === \"MercadoPago\" && action.formaDePago !== null) {\n        nuevoPrecio = getTotalPrice(action.basket);\n      }\n\n      return { ...state,\n        formaDePago: action.formaDePago,\n        totalPrice: nuevoPrecio\n      };\n\n    case actionTypes.ON_LOADING:\n      return { ...state,\n        loading: !state.loading\n      };\n\n    case actionTypes.PROVINCIA_SELECTED:\n      let envioAlInterior = false;\n\n      if (action.provincia !== 'G.B.A (Gran Buenos Aires)' && action.provincia !== 'C.A.B.A') {\n        envioAlInterior = true;\n      } else {\n        envioAlInterior = false;\n      }\n\n      return { ...state,\n        envioAlInterior: envioAlInterior,\n        totalPrice: state.totalPrice + getEmbalajeCost(state.envioAlInterior, action.provincia)\n      };\n\n    case actionTypes.FORMA_DE_ENVIO:\n      return { ...state,\n        formaDeEnvio: action.formaDeEnvio\n      };\n\n    case actionTypes.UNMOUNT_CARRITO:\n      return state = initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/store/reducers/carrito.js"],"names":["actionTypes","initialState","basket","show","totalPrice","loading","order","formaDePago","formaDeEnvio","envioAlInterior","getTotalPrice","length","arrayPrice","map","item","push","precioParticular","cantidad","reduce","total","amount","getEmbalajeCost","provincia","costoEmbalaje","reducer","state","action","type","ADD_TO_BASKET","producto","REMOVE_FROM_BASKET","index","findIndex","product","precio","newBasket","splice","GET_TOTAL_PRICE","SHOW_INFO_BASKET","CREATE_ORDER","FORMA_DE_PAGO","descuento","nuevoPrecio","ON_LOADING","PROVINCIA_SELECTED","FORMA_DE_ENVIO","UNMOUNT_CARRITO"],"mappings":"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","sourcesContent":["import * as actionTypes from './../actions/actionTypes';\r\n\r\n\r\nconst initialState ={\r\n    basket: [],\r\n    show: false,\r\n    totalPrice: 0,\r\n    loading: false,\r\n    order:[],\r\n    formaDePago: null,\r\n    formaDeEnvio: null,\r\n    envioAlInterior: false\r\n}\r\n\r\nconst getTotalPrice = (basket) =>{\r\n    let totalPrice=0;\r\n    if(basket.length > 0){\r\n        let arrayPrice=[];\r\n        totalPrice=basket.map(item => arrayPrice.push(item.precioParticular*item.cantidad))\r\n        \r\n         totalPrice= arrayPrice.reduce((total, amount)=> total+amount);\r\n    }\r\n    return totalPrice;\r\n}\r\n\r\nconst getEmbalajeCost=(envioAlInterior, provincia)=>{\r\n    let costoEmbalaje= 0;\r\n        if(!envioAlInterior && provincia !== 'G.B.A (Gran Buenos Aires)' && provincia !== 'C.A.B.A'){\r\n            costoEmbalaje=400\r\n        }\r\n        if(envioAlInterior && provincia !== 'G.B.A (Gran Buenos Aires)' && provincia !== 'C.A.B.A'){\r\n            costoEmbalaje=0\r\n        }\r\n        if(envioAlInterior && (provincia === 'G.B.A (Gran Buenos Aires)' || provincia === 'C.A.B.A')){\r\n            costoEmbalaje=-400\r\n        }\r\n        return costoEmbalaje\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_BASKET:\r\n            return{\r\n                ...state,\r\n        basket: [...state.basket, action.producto],\r\n            }\r\n        case actionTypes.REMOVE_FROM_BASKET:\r\n            \r\n            const index= state.basket.findIndex( product =>product.precioParticular === action.precio);\r\n            let newBasket = [...state.basket];\r\n            newBasket.splice(index, 1);\r\n            \r\n            return{\r\n                ...state,\r\n                basket: newBasket,\r\n                totalPrice: state.totalPrice - action.precio\r\n            }\r\n        case actionTypes.GET_TOTAL_PRICE:\r\n                return{\r\n                    ...state,\r\n                    totalPrice: getTotalPrice(action.basket)\r\n                }\r\n        case actionTypes.SHOW_INFO_BASKET:\r\n            return{\r\n                ...state,\r\n                show: !state.show\r\n            }\r\n    case actionTypes.CREATE_ORDER:\r\n                return{\r\n                    ...state,\r\n                    order: action.order\r\n                }\r\n    case actionTypes.FORMA_DE_PAGO:\r\n        let descuento=0.8;\r\n        let nuevoPrecio=state.totalPrice;\r\n        if(action.formaDePago === \"Transferencia Bancaria\"){\r\n            nuevoPrecio= nuevoPrecio*descuento;\r\n        }\r\n        if(action.formaDePago === \"MercadoPago\" && action.formaDePago !== null){\r\n            nuevoPrecio=getTotalPrice(action.basket);\r\n        }\r\n        return{\r\n            ...state,\r\n            formaDePago: action.formaDePago,\r\n            totalPrice: nuevoPrecio\r\n        }\r\n    case actionTypes.ON_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: !state.loading\r\n            }\r\n    case actionTypes.PROVINCIA_SELECTED:\r\n        let envioAlInterior=false;\r\n        if(action.provincia !== 'G.B.A (Gran Buenos Aires)' && action.provincia !== 'C.A.B.A'){\r\n            envioAlInterior=true\r\n        }else{\r\n            envioAlInterior=false\r\n        }\r\n                return{\r\n                    ...state,\r\n                    envioAlInterior: envioAlInterior,\r\n                    totalPrice: state.totalPrice + getEmbalajeCost(state.envioAlInterior,  action.provincia)\r\n                }\r\n    case actionTypes.FORMA_DE_ENVIO:\r\n                return{\r\n                    ...state,\r\n                    formaDeEnvio: action.formaDeEnvio\r\n                }\r\n   case actionTypes.UNMOUNT_CARRITO:\r\n                    return state=initialState;\r\n                    \r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}