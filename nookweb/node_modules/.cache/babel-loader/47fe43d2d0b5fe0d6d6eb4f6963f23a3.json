{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\components\\\\Slider\\\\Slider.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport Formas from './../Respaldo/OpcionesRespaldo/Formas/Formas';\nimport Medidas from './../Respaldo/OpcionesRespaldo/Medidas/Medidas';\nimport Modelos from './../Respaldo/OpcionesRespaldo/Modelos/Modelos';\nimport Generos from './../Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores';\nimport Colores from './../Respaldo/OpcionesRespaldo/Colores/Colores';\nimport Tachas from './../Respaldo/OpcionesRespaldo/Tachas/Tachas';\nimport \"./slider.css\";\n\nconst Slider = () => {\n  const tachaSelect = (tamanio, precio, tipo) => {\n    if (tipo.length > 0) {\n      //pongo un condicional para que si clickeas \"sin tachas\" no se despache esa accion que cambia el displayTachaOptions a true\n      this.props.onClickOnTacha();\n    }\n\n    this.props.onTachaSelected(tamanio, precio);\n  };\n\n  const tipoDeTachaSelect = tipo => {\n    this.props.onTipoDeTachaSelected(tipo);\n  };\n\n  let sliderArr = [];\n  const [x, setX] = useState(0);\n\n  const goLeft = () => {\n    console.log(x);\n    x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\n  };\n\n  const goRight = () => {\n    x === -100 * (sliderArr.length - 1) ? setX(0) : setX(x - 100);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, sliderArr.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"slide\",\n      style: {\n        transform: `translateX(${x}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, item);\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-styles\",\n    id: \"goLeft\",\n    onClick: goLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"left\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-styles\",\n    id: \"goRight\",\n    onClick: goRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"right\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    respaldo: state.respaldo.respaldo,\n    displayOptions: state.respaldo.displayTachaOptions,\n    precioRespaldo: state.respaldo.respaldo.precioParticular,\n    basket: state.carrito.basket\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormaSelected: (tipo, precio) => dispatch(actions.onFormaSelected(tipo, precio)),\n    onMedidaSelected: (altura, ancho, precio) => dispatch(actions.onMedidaSelected(altura, ancho, precio)),\n    onGeneroSelected: (tipo, precio) => dispatch(actions.onGeneroSelected(tipo, precio)),\n    onColorSelected: color => dispatch(actions.onColorSelected(color)),\n    onTachaSelected: (tamanio, precio) => dispatch(actions.onTachaSelected(tamanio, precio)),\n    onTipoDeTachaSelected: tipo => dispatch(actions.onTipoDeTachaSelected(tipo)),\n    onModeloSelected: (tipo, precio) => dispatch(actions.onModeloSelected(tipo, precio)),\n    onClickOnTacha: () => dispatch(actions.onClickOnTacha())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Slider);","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Slider/Slider.js"],"names":["React","useState","connect","Formas","Medidas","Modelos","Generos","Colores","Tachas","Slider","tachaSelect","tamanio","precio","tipo","length","props","onClickOnTacha","onTachaSelected","tipoDeTachaSelect","onTipoDeTachaSelected","sliderArr","x","setX","goLeft","console","log","goRight","map","item","index","transform","mapStateToProps","state","respaldo","displayOptions","displayTachaOptions","precioRespaldo","precioParticular","basket","carrito","mapDispatchToProps","dispatch","onFormaSelected","actions","onMedidaSelected","altura","ancho","onGeneroSelected","onColorSelected","color","onModeloSelected"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport Formas from './../Respaldo/OpcionesRespaldo/Formas/Formas';\r\nimport Medidas from './../Respaldo/OpcionesRespaldo/Medidas/Medidas';\r\nimport Modelos from './../Respaldo/OpcionesRespaldo/Modelos/Modelos'\r\nimport Generos from './../Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores';\r\nimport Colores from './../Respaldo/OpcionesRespaldo/Colores/Colores';\r\nimport Tachas from './../Respaldo/OpcionesRespaldo/Tachas/Tachas';\r\n\r\nimport \"./slider.css\";\r\n\r\nconst Slider = () => {\r\n  const tachaSelect = (tamanio, precio, tipo)=>{\r\n    if(tipo.length > 0){ \r\n      //pongo un condicional para que si clickeas \"sin tachas\" no se despache esa accion que cambia el displayTachaOptions a true\r\n       this.props.onClickOnTacha()\r\n    }\r\n   \r\n    this.props.onTachaSelected(tamanio, precio)\r\n  }\r\n\r\n  const tipoDeTachaSelect=(tipo) =>{\r\n    this.props.onTipoDeTachaSelected(tipo)\r\n  }\r\n\r\n  let sliderArr = [ \r\n\r\n  ];\r\n  const [x, setX]=useState(0)\r\n\r\n  const goLeft = () =>{\r\n    console.log(x);\r\n    x=== 0 ? setX(-100*(sliderArr.length-1)) : setX(x + 100)\r\n  }\r\n\r\n  const goRight = () =>{\r\n      \r\n    x=== -100*(sliderArr.length-1) ? setX(0) : setX(x-100)\r\n}\r\n  return (\r\n    <div className=\"slider\">\r\n      {sliderArr.map((item, index) => {\r\n        return (\r\n          <div key={index} \r\n          className=\"slide\"\r\n          style={{transform: `translateX(${x}%)`}}>\r\n            {item}\r\n          </div>\r\n        );\r\n      })}\r\n      <button className=\"btn-styles\" id=\"goLeft\" onClick={goLeft}>\r\n        left\r\n      </button>\r\n      <button className=\"btn-styles\" id=\"goRight\" onClick={goRight}>\r\n        right\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      respaldo: state.respaldo.respaldo,\r\n      displayOptions: state.respaldo.displayTachaOptions,\r\n      precioRespaldo: state.respaldo.respaldo.precioParticular,\r\n      basket: state.carrito.basket\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onFormaSelected: (tipo, precio) =>\r\n        dispatch(actions.onFormaSelected(tipo, precio)),\r\n      onMedidaSelected: (altura, ancho, precio) =>\r\n        dispatch(actions.onMedidaSelected(altura, ancho, precio)),\r\n      onGeneroSelected: (tipo, precio) =>\r\n        dispatch(actions.onGeneroSelected(tipo, precio)),\r\n      onColorSelected: (color) =>\r\n        dispatch(actions.onColorSelected(color)),\r\n      onTachaSelected: (tamanio, precio) =>\r\n        dispatch(actions.onTachaSelected(tamanio, precio)),\r\n      onTipoDeTachaSelected: (tipo) =>\r\n        dispatch(actions.onTipoDeTachaSelected(tipo)),\r\n      onModeloSelected: (tipo, precio) =>\r\n        dispatch(actions.onModeloSelected(tipo, precio)),\r\n      onClickOnTacha: ()=>dispatch(actions.onClickOnTacha())\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Slider);\r\n"]},"metadata":{},"sourceType":"module"}