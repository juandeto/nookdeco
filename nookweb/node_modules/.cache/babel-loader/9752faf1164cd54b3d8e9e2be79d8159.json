{"ast":null,"code":"import * as actionTypes from './../actions/actionTypes';\nconst initialState = {\n  basket: [],\n  show: false,\n  totalPrice: 0,\n  loading: false,\n  orders: [],\n  formaDePago: null,\n  formaDeEnvio: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_BASKET:\n      return { ...state,\n        basket: [...state.basket, action.producto]\n      };\n\n    case actionTypes.REMOVE_FROM_BASKET:\n      const index = state.basket.findIndex(product => product.precioParticular === action.precio);\n      let newBasket = [...state.basket];\n      newBasket.splice(index, 1);\n      return { ...state,\n        basket: newBasket,\n        totalPrice: state.totalPrice - action.precio\n      };\n\n    case actionTypes.GET_TOTAL_PRICE:\n      let totalPrice = 0;\n\n      if (action.basket.length > 0) {\n        let arrayPrice = [];\n        console.log(action.basket);\n        totalPrice = action.basket.map(item => arrayPrice.push(item.precioParticular * item.cantidad));\n        totalPrice = arrayPrice.reduce((total, amount) => total + amount);\n        console.log(totalPrice);\n      }\n\n      return { ...state,\n        totalPrice: totalPrice\n      };\n\n    case actionTypes.SHOW_INFO_BASKET:\n      return { ...state,\n        show: !state.show\n      };\n\n    case actionTypes.CREATE_ORDER:\n      let costoEmbalaje = 0;\n      console.log(state.totalPrice, action.order);\n\n      if (action.order.orderData.provincia !== 'G.B.A (Gran Buenos Aires)' || \"C.A.B.A\") {\n        costoEmbalaje = 400;\n      }\n\n      return { ...state,\n        orders: [...state.orders, action.order],\n        totalPrice: state.totalPrice + costoEmbalaje\n      };\n\n    case actionTypes.FORMA_DE_PAGO:\n      let descuento = 0.8;\n      let nuevoPrecio = state.totalPrice;\n\n      if (action.formaDePago === \"Transferencia Bancaria\") {\n        nuevoPrecio = nuevoPrecio * descuento;\n      }\n\n      if (action.formaDePago === \"MercadoPago\") {\n        if (action.basket.length > 0) {\n          let arrayPrice = [];\n          totalPrice = action.basket.map(item => arrayPrice.push(item.precioParticular * item.cantidad));\n          totalPrice = arrayPrice.reduce((total, amount) => total + amount);\n          console.log(totalPrice);\n        }\n      }\n\n      return { ...state,\n        formaDePago: action.formaDePago,\n        totalPrice: nuevoPrecio\n      };\n\n    case actionTypes.ON_LOADING:\n      return { ...state,\n        loading: !state.loading\n      };\n\n    case actionTypes.FORMA_DE_ENVIO:\n      return { ...state,\n        formaDeEnvio: action.formaDeEnvio\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/store/reducers/carrito.js"],"names":["actionTypes","initialState","basket","show","totalPrice","loading","orders","formaDePago","formaDeEnvio","reducer","state","action","type","ADD_TO_BASKET","producto","REMOVE_FROM_BASKET","index","findIndex","product","precioParticular","precio","newBasket","splice","GET_TOTAL_PRICE","length","arrayPrice","console","log","map","item","push","cantidad","reduce","total","amount","SHOW_INFO_BASKET","CREATE_ORDER","costoEmbalaje","order","orderData","provincia","FORMA_DE_PAGO","descuento","nuevoPrecio","ON_LOADING","FORMA_DE_ENVIO"],"mappings":"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","sourcesContent":["import * as actionTypes from './../actions/actionTypes';\r\n\r\n\r\nconst initialState ={\r\n    basket: [],\r\n    show: false,\r\n    totalPrice: 0,\r\n    loading: false,\r\n    orders:[],\r\n    formaDePago: null,\r\n    formaDeEnvio: null\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_BASKET:\r\n            return{\r\n                ...state,\r\n        basket: [...state.basket, action.producto],\r\n            }\r\n        case actionTypes.REMOVE_FROM_BASKET:\r\n            \r\n            const index= state.basket.findIndex( product =>product.precioParticular === action.precio);\r\n            let newBasket = [...state.basket];\r\n            newBasket.splice(index, 1);\r\n            \r\n            return{\r\n                ...state,\r\n                basket: newBasket,\r\n                totalPrice: state.totalPrice - action.precio\r\n            }\r\n        case actionTypes.GET_TOTAL_PRICE:\r\n            let totalPrice=0;\r\n            if(action.basket.length > 0){\r\n                let arrayPrice=[];\r\n                console.log(action.basket);\r\n                totalPrice=action.basket.map(item => arrayPrice.push(item.precioParticular*item.cantidad))\r\n                \r\n                totalPrice= arrayPrice.reduce((total, amount)=> total+amount)\r\n                console.log(totalPrice);\r\n            }\r\n            \r\n                return{\r\n                    ...state,\r\n                    totalPrice: totalPrice\r\n                }\r\n        case actionTypes.SHOW_INFO_BASKET:\r\n            return{\r\n                ...state,\r\n                show: !state.show\r\n            }\r\n    case actionTypes.CREATE_ORDER:\r\n        let costoEmbalaje=0;\r\n        console.log(state.totalPrice, action.order)\r\n        if(action.order.orderData.provincia !== 'G.B.A (Gran Buenos Aires)' ||  \"C.A.B.A\"){\r\n            costoEmbalaje=400;\r\n        }\r\n                return{\r\n                    ...state,\r\n                    orders: [...state.orders, action.order],\r\n                    totalPrice: state.totalPrice + costoEmbalaje\r\n                }\r\n    case actionTypes.FORMA_DE_PAGO:\r\n        let descuento=0.8;\r\n        let nuevoPrecio=state.totalPrice;\r\n        if(action.formaDePago === \"Transferencia Bancaria\"){\r\n            nuevoPrecio= nuevoPrecio*descuento;\r\n        }\r\n        if(action.formaDePago === \"MercadoPago\"){\r\n            if(action.basket.length > 0){\r\n                let arrayPrice=[];\r\n                totalPrice=action.basket.map(item => arrayPrice.push(item.precioParticular*item.cantidad))\r\n                \r\n                totalPrice= arrayPrice.reduce((total, amount)=> total+amount)\r\n                console.log(totalPrice);\r\n            }\r\n        }\r\n        return{\r\n            ...state,\r\n            formaDePago: action.formaDePago,\r\n            totalPrice: nuevoPrecio\r\n        }\r\n    case actionTypes.ON_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: !state.loading\r\n            }\r\n    case actionTypes.FORMA_DE_ENVIO:\r\n                return{\r\n                    ...state,\r\n                    formaDeEnvio: action.formaDeEnvio\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}