{"ast":null,"code":"import * as actionTypes from './../actions/actionTypes';\nconst initialState = {\n  basket: [],\n  show: false,\n  totalPrice: 0,\n  loading: false,\n  orders: [],\n  formaDePago: null,\n  formaDeEnvio: null\n};\n\nconst getTotalPrice = basket => {\n  let totalPrice = 0;\n\n  if (basket.length > 0) {\n    let arrayPrice = [];\n    totalPrice = basket.map(item => arrayPrice.push(item.precioParticular * item.cantidad));\n    return totalPrice = arrayPrice.reduce((total, amount) => total + amount);\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_BASKET:\n      return { ...state,\n        basket: [...state.basket, action.producto]\n      };\n\n    case actionTypes.REMOVE_FROM_BASKET:\n      const index = state.basket.findIndex(product => product.precioParticular === action.precio);\n      let newBasket = [...state.basket];\n      newBasket.splice(index, 1);\n      return { ...state,\n        basket: newBasket,\n        totalPrice: state.totalPrice - action.precio\n      };\n\n    case actionTypes.GET_TOTAL_PRICE:\n      return { ...state,\n        totalPrice: getTotalPrice(action.basket)\n      };\n\n    case actionTypes.SHOW_INFO_BASKET:\n      return { ...state,\n        show: !state.show\n      };\n\n    case actionTypes.CREATE_ORDER:\n      let costoEmbalaje = 0;\n      console.log(state.totalPrice, action.order);\n\n      if (action.order.orderData.provincia !== 'G.B.A (Gran Buenos Aires)' || \"C.A.B.A\") {\n        costoEmbalaje = 400;\n      }\n\n      return { ...state,\n        orders: [...state.orders, action.order],\n        totalPrice: state.totalPrice + costoEmbalaje\n      };\n\n    case actionTypes.FORMA_DE_PAGO:\n      let descuento = 0.8;\n      let nuevoPrecio = state.totalPrice;\n\n      if (action.formaDePago === \"Transferencia Bancaria\") {\n        nuevoPrecio = nuevoPrecio * descuento;\n      }\n\n      if (action.formaDePago === \"MercadoPago\" && action.formaDePago !== null) {\n        nuevoPrecio = getTotalPrice(action.basket);\n      }\n\n      return { ...state,\n        formaDePago: action.formaDePago,\n        totalPrice: nuevoPrecio\n      };\n\n    case actionTypes.ON_LOADING:\n      return { ...state,\n        loading: !state.loading\n      };\n\n    case actionTypes.FORMA_DE_ENVIO:\n      return { ...state,\n        formaDeEnvio: action.formaDeEnvio\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/store/reducers/carrito.js"],"names":["actionTypes","initialState","basket","show","totalPrice","loading","orders","formaDePago","formaDeEnvio","getTotalPrice","length","arrayPrice","map","item","push","precioParticular","cantidad","reduce","total","amount","reducer","state","action","type","ADD_TO_BASKET","producto","REMOVE_FROM_BASKET","index","findIndex","product","precio","newBasket","splice","GET_TOTAL_PRICE","SHOW_INFO_BASKET","CREATE_ORDER","costoEmbalaje","console","log","order","orderData","provincia","FORMA_DE_PAGO","descuento","nuevoPrecio","ON_LOADING","FORMA_DE_ENVIO"],"mappings":"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","sourcesContent":["import * as actionTypes from './../actions/actionTypes';\r\n\r\n\r\nconst initialState ={\r\n    basket: [],\r\n    show: false,\r\n    totalPrice: 0,\r\n    loading: false,\r\n    orders:[],\r\n    formaDePago: null,\r\n    formaDeEnvio: null\r\n}\r\n\r\nconst getTotalPrice = (basket) =>{\r\n    let totalPrice=0;\r\n    if(basket.length > 0){\r\n        let arrayPrice=[];\r\n        totalPrice=basket.map(item => arrayPrice.push(item.precioParticular*item.cantidad))\r\n        \r\n        return totalPrice= arrayPrice.reduce((total, amount)=> total+amount);\r\n    }\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_BASKET:\r\n            return{\r\n                ...state,\r\n        basket: [...state.basket, action.producto],\r\n            }\r\n        case actionTypes.REMOVE_FROM_BASKET:\r\n            \r\n            const index= state.basket.findIndex( product =>product.precioParticular === action.precio);\r\n            let newBasket = [...state.basket];\r\n            newBasket.splice(index, 1);\r\n            \r\n            return{\r\n                ...state,\r\n                basket: newBasket,\r\n                totalPrice: state.totalPrice - action.precio\r\n            }\r\n        case actionTypes.GET_TOTAL_PRICE:\r\n                return{\r\n                    ...state,\r\n                    totalPrice: getTotalPrice(action.basket)\r\n                }\r\n        case actionTypes.SHOW_INFO_BASKET:\r\n            return{\r\n                ...state,\r\n                show: !state.show\r\n            }\r\n    case actionTypes.CREATE_ORDER:\r\n        let costoEmbalaje=0;\r\n        console.log(state.totalPrice, action.order)\r\n        if(action.order.orderData.provincia !== 'G.B.A (Gran Buenos Aires)' ||  \"C.A.B.A\"){\r\n            costoEmbalaje=400;\r\n        }\r\n                return{\r\n                    ...state,\r\n                    orders: [...state.orders, action.order],\r\n                    totalPrice: state.totalPrice + costoEmbalaje\r\n                }\r\n    case actionTypes.FORMA_DE_PAGO:\r\n        let descuento=0.8;\r\n        let nuevoPrecio=state.totalPrice;\r\n        if(action.formaDePago === \"Transferencia Bancaria\"){\r\n            nuevoPrecio= nuevoPrecio*descuento;\r\n        }\r\n        if(action.formaDePago === \"MercadoPago\" && action.formaDePago !== null){\r\n            nuevoPrecio=getTotalPrice(action.basket);\r\n        }\r\n        return{\r\n            ...state,\r\n            formaDePago: action.formaDePago,\r\n            totalPrice: nuevoPrecio\r\n        }\r\n    case actionTypes.ON_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: !state.loading\r\n            }\r\n    case actionTypes.FORMA_DE_ENVIO:\r\n                return{\r\n                    ...state,\r\n                    formaDeEnvio: action.formaDeEnvio\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}