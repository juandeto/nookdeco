{"ast":null,"code":"import axios from'axios';import*as actionTypes from'./actionTypes';export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token,userId){return{type:actionTypes.AUTH_SUCCESS,idToken:token,userId:userId};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,authdata:error};};export var logout=function logout(){localStorage.removeItem('token');localStorage.removeItem('expirationDate');localStorage.removeItem('userId');return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationTime){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationTime*3000);};};export var auth=function auth(email,password){return function(dispatch){dispatch(authStart());var authdata={email:email,password:password,returnSecureToken:true};axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCg_f21k9-OQtnQJtmreOtrJMJcW4EC7II',authdata).then(function(response){var expirationDate=new Date(new Date().getTime()+response.data.expiresIn*3000);localStorage.setItem('token',response.data.idToken);localStorage.setItem('expirationDate',expirationDate);localStorage.setItem('userId',response.data.localId);dispatch(authSuccess(response.data.idToken,response.data.localId));dispatch(checkAuthTimeout(response.data.expiresIn));}).catch(function(err){dispatch(authFail(err.response.data.error));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem('token');if(!token){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){dispatch(logout());}else{var userId=localStorage.getItem('userId');dispatch(authSuccess(token,userId));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","authdata","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","returnSecureToken","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","authCheckState","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () =>{\r\n    return{\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) =>{\r\n    return{\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\n\r\nexport const authFail = (error) =>{\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        authdata: error\r\n    }\r\n}\r\n\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) =>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        }, expirationTime * 3000)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password) =>{\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authdata={\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCg_f21k9-OQtnQJtmreOtrJMJcW4EC7II', authdata)\r\n        .then(response =>{\r\n            const expirationDate= new Date(new Date().getTime() + response.data.expiresIn * 3000)\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () =>{\r\n    return dispatch =>{\r\n        const token =localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if( expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}