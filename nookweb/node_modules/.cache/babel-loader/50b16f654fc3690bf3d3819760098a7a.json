{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\components\\\\Respaldo\\\\OpcionesRespaldo\\\\GenerosYColores\\\\GenerosYColores.js\";\nimport React from \"react\";\nimport classes from \"./GenerosYColores.module.css\";\n\nconst GenerosYColores = props => {\n  const arrayClasses = [classes.item, classes.fill];\n  let form = null;\n\n  if (props.modelo !== 'Con Funda') {\n    // condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\n    form = props.generos.map((genero, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: props.generoSelected === genero.tipo ? arrayClasses.join(\" \") : arrayClasses[0],\n      key: genero.tipo,\n      onClick: () => props.selectGenero(genero.tipo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.tipo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, genero.tipo))).filter(genero => genero.tipo !== 'Tusor Liso' || 'Tusor Rayado');\n  } else {\n    form = props.generos.filter(genero => genero.tipo === 'Tusor Liso' || 'Tusor Rayado').map( /*#__PURE__*/React.createElement(\"div\", {\n      className: props.generoSelected === genero.tipo ? arrayClasses.join(\" \") : arrayClasses[0],\n      key: genero.tipo,\n      onClick: () => props.selectGenero(genero.tipo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.tipo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, genero.tipo)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GeneroYColor + ' page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Elija un g\\xE9nero\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.guideline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Tipo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.opcionesFormas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, form));\n};\n\nexport default GenerosYColores;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores.js"],"names":["React","classes","GenerosYColores","props","arrayClasses","item","fill","form","modelo","generos","map","genero","i","generoSelected","tipo","join","selectGenero","filter","GeneroYColor","guideline","opcionesFormas"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,YAAY,GAAG,CAACH,OAAO,CAACI,IAAT,EAAeJ,OAAO,CAACK,IAAvB,CAArB;AACA,MAAIC,IAAI,GAAE,IAAV;;AACF,MAAGJ,KAAK,CAACK,MAAN,KAAiB,WAApB,EAAgC;AAAE;AAChCD,IAAAA,IAAI,GAAGJ,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,kBACvB;AACE,MAAA,SAAS,EAAET,KAAK,CAACU,cAAN,KAAyBF,MAAM,CAACG,IAAhC,GAAsCV,YAAY,CAACW,IAAb,CAAkB,GAAlB,CAAtC,GAA+DX,YAAY,CAAC,CAAD,CADxF;AAEE,MAAA,GAAG,EAAEO,MAAM,CAACG,IAFd;AAGE,MAAA,OAAO,EAAE,MAAMX,KAAK,CAACa,YAAN,CAAmBL,MAAM,CAACG,IAA1B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAM,MAAA,SAAS,EAAEb,OAAO,CAACa,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,MAAM,CAACG,IAAvC,CALF,CADK,EAQJG,MARI,CAQGN,MAAM,IAAIA,MAAM,CAACG,IAAP,KAAgB,YAAhB,IAAgC,cAR7C,CAAP;AASD,GAVD,MAUK;AACHP,IAAAA,IAAI,GAACJ,KAAK,CAACM,OAAN,CACJQ,MADI,CACGN,MAAM,IAAIA,MAAM,CAACG,IAAP,KAAgB,YAAhB,IAAgC,cAD7C,EAEJJ,GAFI,eAGH;AACA,MAAA,SAAS,EAAEP,KAAK,CAACU,cAAN,KAAyBF,MAAM,CAACG,IAAhC,GAAsCV,YAAY,CAACW,IAAb,CAAkB,GAAlB,CAAtC,GAA+DX,YAAY,CAAC,CAAD,CADtF;AAEA,MAAA,GAAG,EAAEO,MAAM,CAACG,IAFZ;AAGA,MAAA,OAAO,EAAE,MAAMX,KAAK,CAACa,YAAN,CAAmBL,MAAM,CAACG,IAA1B,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKA;AAAM,MAAA,SAAS,EAAEb,OAAO,CAACa,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,MAAM,CAACG,IAAvC,CALA,CAHG,CAAL;AAWD;;AACC,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACiB,YAAR,GAAsB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCb,IAAzC,CALF,CADF;AASD,CAnCD;;AAqCA,eAAeL,eAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./GenerosYColores.module.css\";\r\n\r\nconst GenerosYColores = (props) => {\r\n  const arrayClasses = [classes.item, classes.fill];\r\n  let form =null\r\nif(props.modelo !== 'Con Funda'){ // condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\r\n  form = props.generos.map((genero, i) => (\r\n    <div\r\n      className={props.generoSelected === genero.tipo? arrayClasses.join(\" \") : arrayClasses[0]}\r\n      key={genero.tipo}\r\n      onClick={() => props.selectGenero(genero.tipo)}\r\n    >\r\n      <span className={classes.tipo}>{genero.tipo}</span>\r\n    </div>\r\n  )).filter(genero => genero.tipo !== 'Tusor Liso' || 'Tusor Rayado');\r\n}else{\r\n  form=props.generos\r\n  .filter(genero => genero.tipo === 'Tusor Liso' || 'Tusor Rayado')\r\n  .map(\r\n    <div\r\n    className={props.generoSelected === genero.tipo? arrayClasses.join(\" \") : arrayClasses[0]}\r\n    key={genero.tipo}\r\n    onClick={() => props.selectGenero(genero.tipo)}\r\n  >\r\n    <span className={classes.tipo}>{genero.tipo}</span>\r\n  </div>\r\n  )\r\n}\r\n  return (\r\n    <div className={classes.GeneroYColor+ ' page'}>\r\n      <h2>Elija un g√©nero</h2>\r\n      <div className={classes.guideline}>\r\n        <span>Tipo</span>\r\n      </div>\r\n      <div className={classes.opcionesFormas}>{form}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerosYColores;\r\n"]},"metadata":{},"sourceType":"module"}