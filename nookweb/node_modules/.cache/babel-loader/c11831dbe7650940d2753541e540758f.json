{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\components\\\\Respaldo\\\\OpcionesRespaldo\\\\GenerosYColores\\\\GenerosYColores.js\";\nimport React from \"react\";\nimport classes from \"./GenerosYColores.module.css\";\nimport ItemGenero from './ItemGenero/ItemGenero';\n\nconst GenerosYColores = props => {\n  let form = null;\n\n  if (props.modelo === 'Con Funda') {\n    // condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\n    form = props.generos.filter(genero => genero.tipo === 'Tusor Liso' || genero.tipo === 'Tusor Rayado').map((genero, i) => {\n      return /*#__PURE__*/React.createElement(ItemGenero, {\n        key: i,\n        selectGenero: props.selectGenero,\n        generoSelected: props.generoSelected,\n        genero: genero,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 12\n        }\n      });\n    });\n  } else {\n    form = props.generos.filter(genero => genero.tipo !== 'Tusor Liso' || genero.tipo !== 'Tusor Rayado').map((genero, i) => /*#__PURE__*/React.createElement(ItemGenero, {\n      key: i,\n      selectGenero: props.selectGenero,\n      generoSelected: props.generoSelected,\n      genero: genero,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }\n    }));\n    console.log(form);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GeneroYColor + ' page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Elija un g\\xE9nero\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.guideline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Tipo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.opcionesFormas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, form));\n};\n\nexport default GenerosYColores;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores.js"],"names":["React","classes","ItemGenero","GenerosYColores","props","form","modelo","generos","filter","genero","tipo","map","i","selectGenero","generoSelected","console","log","GeneroYColor","guideline","opcionesFormas"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAIC,IAAI,GAAE,IAAV;;AACF,MAAGD,KAAK,CAACE,MAAN,KAAiB,WAApB,EAAgC;AAC7B;AAEAD,IAAAA,IAAI,GAAGD,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,MAAM,IAAKA,MAAM,CAACC,IAAP,KAAgB,YAAhB,IAAgCD,MAAM,CAACC,IAAP,KAAgB,cAAhF,EACNC,GADM,CACF,CAACF,MAAD,EAASG,CAAT,KAAc;AAClB,0BAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,CAAjB;AAAoB,QAAA,YAAY,EAAER,KAAK,CAACS,YAAxC;AAAsD,QAAA,cAAc,EAAET,KAAK,CAACU,cAA5E;AAA4F,QAAA,MAAM,EAAEL,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHO,CAAP;AAKF,GARD,MAQK;AACHJ,IAAAA,IAAI,GAACD,KAAK,CAACG,OAAN,CACJC,MADI,CACGC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,YAAhB,IAAgCD,MAAM,CAACC,IAAP,KAAgB,cAD7D,EAEJC,GAFI,CAEC,CAACF,MAAD,EAASG,CAAT,kBAAe,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,CAAjB;AAAoB,MAAA,YAAY,EAAER,KAAK,CAACS,YAAxC;AAAsD,MAAA,cAAc,EAAET,KAAK,CAACU,cAA5E;AAA4F,MAAA,MAAM,EAAEL,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFhB,CAAL;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD;;AACC,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACgB,YAAR,GAAsB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACiB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCd,IAAzC,CALF,CADF;AASD,CAzBD;;AA2BA,eAAeF,eAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./GenerosYColores.module.css\";\r\nimport ItemGenero from './ItemGenero/ItemGenero';\r\n\r\nconst GenerosYColores = (props) => {\r\n  let form =null\r\nif(props.modelo === 'Con Funda'){\r\n   // condicional para cuando el usuario eligio el modelo Con funda, ya que solo tiene opcion de elegir dos generos\r\n  \r\n   form = props.generos.filter(genero => (genero.tipo === 'Tusor Liso' || genero.tipo === 'Tusor Rayado'))\r\n   .map((genero, i) =>{ \r\n    return(<ItemGenero key={i} selectGenero={props.selectGenero} generoSelected={props.generoSelected} genero={genero} />)\r\n  })\r\n  \r\n}else{\r\n  form=props.generos\r\n  .filter(genero =>(genero.tipo !== 'Tusor Liso' || genero.tipo !== 'Tusor Rayado'))\r\n  .map( (genero, i) =>(<ItemGenero key={i} selectGenero={props.selectGenero} generoSelected={props.generoSelected} genero={genero} />))\r\n  console.log(form);\r\n}\r\n  return (\r\n    <div className={classes.GeneroYColor+ ' page'}>\r\n      <h2>Elija un g√©nero</h2>\r\n      <div className={classes.guideline}>\r\n        <span>Tipo</span>\r\n      </div>\r\n      <div className={classes.opcionesFormas}>{form}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerosYColores;\r\n"]},"metadata":{},"sourceType":"module"}