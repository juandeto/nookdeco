{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\containers\\\\RespaldoBuilder\\\\RespaldoBuilder.js\";\nimport React, { Component } from \"react\";\nimport axios from './../../axios';\nimport * as actions from \"./../../store/actions/index\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classes from \"./RespaldoBuilder.module.css\";\nimport ContainerRespaldo from \"../../components/Respaldo/Respaldo/ContainerRespaldo\";\nimport Formas from \"./../../components/Respaldo/OpcionesRespaldo/Formas/Formas\";\nimport Medidas from \"./../../components/Respaldo/OpcionesRespaldo/Medidas/Medidas\";\nimport GenerosYColores from \"./../../components/Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores\";\nimport Tachas from \"./../../components/Respaldo/OpcionesRespaldo/Tachas/Tachas\";\nimport Modelos from \"./../../components/Respaldo/OpcionesRespaldo/Modelos/Modelos\";\nimport Colores from \"./../../components/Respaldo/OpcionesRespaldo/Colores/Colores\";\nimport Header from './../../components/Respaldo/Header/Header';\nimport Spinner from './../../components/Ul/Spinner/Spinner';\n\nclass RespaldoBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0,\n      opciones: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/opcionesRespaldo.json').then(response => {\n      const object = response.data;\n\n      for (let property in object) {\n        this.setState({\n          opciones: object[property]\n        });\n      }\n    }).catch(error => console.log(error));\n    const baseUrl = \"/respaldo-options/respaldo-builder\";\n    const keys = [\"\", \"/medidas\", \"/generosycolores\", \"/colores\", \"/tachas\", \"/modelos\"];\n    let location = this.props.history.location.pathname;\n    location = location.replace(baseUrl, \"\");\n    let ind = keys.findIndex(key => key === location);\n\n    if (ind === -1) {\n      return ind = 0;\n    }\n\n    this.setState({\n      index: ind\n    });\n  }\n\n  render() {\n    const keys = [\"/\", \"/medidas\", \"/generosycolores\", \"/colores\", \"/tachas\", \"/modelos\"];\n    const baseUrl = \"/respaldo-options/respaldo-builder\";\n\n    const toggleRoutesHandlerLeft = location => {\n      location = location.replace(baseUrl, \"\");\n      let index = this.state.index;\n\n      if (keys[index - 1] === undefined) {\n        return;\n      }\n\n      this.setState({\n        index: index - 1\n      });\n      return this.props.history.push(baseUrl + keys[index - 1]);\n    };\n\n    const toggleRoutesHandlerRight = location => {\n      location = location.replace(baseUrl, \"\");\n      let index = keys.indexOf(location);\n\n      if (keys[index + 1] === undefined) {\n        return this.props.history.push(\"/resumen-respaldo\");\n      }\n\n      if (index === -1) {\n        index = 0;\n      } //condicional: si el usuario no eligio forma no puede seguir:\n\n\n      if (keys[index + 1] === \"/medidas\" && this.props.respaldo.forma === 'no seleccionado') {\n        return alert('debe elegir una forma antes de proseguir');\n      } else {\n        this.setState({\n          index: index + 1\n        });\n        return this.props.history.push(baseUrl + keys[index + 1]);\n      }\n    };\n\n    const tachaSelect = (tamanio, precio) => {\n      console.log(tamanio, precio);\n      this.props.onClickOnTacha();\n      this.props.onTipoDeTachaSelected(tamanio, precio);\n    };\n\n    if (this.state.opciones) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.RespaldoBuilder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        index: this.state.index,\n        toggleLeft: toggleRoutesHandlerLeft,\n        toggleRight: toggleRoutesHandlerRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.croquisRespaldo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ContainerRespaldo, {\n        respaldo: this.props.respaldo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.precioTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, \"Precio Total:\", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, \"$\", this.props.precioRespaldo.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.control,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: baseUrl + \"/medidas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Medidas, {\n        medidaSelected: this.props.respaldo.medida,\n        medidas: this.state.opciones.medidas,\n        selectMedida: this.props.onMedidaSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: baseUrl + \"/generosycolores\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GenerosYColores, {\n        generos: this.state.opciones.generosycolores,\n        generoSelected: this.props.respaldo.genero,\n        selectGenero: this.props.onGeneroSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: baseUrl + \"/colores\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Colores, {\n        color: this.state.opciones.generosycolores,\n        generoParaColor: this.props.respaldo.genero,\n        selectColor: this.props.onColorSelected,\n        colorSelected: this.props.respaldo.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: baseUrl + \"/tachas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tachas, {\n        displayOptions: this.props.displayOptions,\n        tachas: this.state.opciones.tachas,\n        selectedTacha: this.props.respaldo.tacha,\n        selectTacha: tachaSelect,\n        selectTipoDeTacha: this.props.onTipoDeTachaSelected,\n        tipoDeTacha: this.props.respaldo.tipoDeTacha,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: baseUrl + \"/modelos\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modelos, {\n        selectModelo: this.props.onModeloSelected,\n        selectedModelo: this.props.respaldo.modelo,\n        modelos: this.state.opciones.modelos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: baseUrl + \"/\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Formas, {\n        formas: this.state.opciones.formas,\n        selected: this.props.onFormaSelected,\n        tachaSelected: this.props.respaldo.forma,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    respaldo: state.respaldo.respaldo,\n    displayOptions: state.respaldo.displayTachaOptions,\n    precioRespaldo: state.respaldo.respaldo.precioParticular,\n    basket: state.carrito.basket\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormaSelected: (tipo, precio) => dispatch(actions.onFormaSelected(tipo, precio)),\n    onMedidaSelected: (altura, ancho, precio) => dispatch(actions.onMedidaSelected(altura, ancho, precio)),\n    onGeneroSelected: (tipo, precio) => dispatch(actions.onGeneroSelected(tipo, precio)),\n    onColorSelected: color => dispatch(actions.onColorSelected(color)),\n    onTachaSelected: (tamanio, precio) => dispatch(actions.onTachaSelected(tamanio, precio)),\n    onTipoDeTachaSelected: tipo => dispatch(actions.onTipoDeTachaSelected(tipo)),\n    onModeloSelected: (tipo, precio) => dispatch(actions.onModeloSelected(tipo, precio)),\n    onClickOnTacha: () => dispatch(actions.onClickOnTacha())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RespaldoBuilder);","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/containers/RespaldoBuilder/RespaldoBuilder.js"],"names":["React","Component","axios","actions","Route","Switch","connect","classes","ContainerRespaldo","Formas","Medidas","GenerosYColores","Tachas","Modelos","Colores","Header","Spinner","RespaldoBuilder","state","index","opciones","componentDidMount","get","then","response","object","data","property","setState","catch","error","console","log","baseUrl","keys","location","props","history","pathname","replace","ind","findIndex","key","render","toggleRoutesHandlerLeft","undefined","push","toggleRoutesHandlerRight","indexOf","respaldo","forma","alert","tachaSelect","tamanio","precio","onClickOnTacha","onTipoDeTachaSelected","croquisRespaldo","precioTotal","precioRespaldo","toFixed","control","medida","medidas","onMedidaSelected","generosycolores","genero","onGeneroSelected","onColorSelected","color","displayOptions","tachas","tacha","tipoDeTacha","onModeloSelected","modelo","modelos","formas","onFormaSelected","mapStateToProps","displayTachaOptions","precioParticular","basket","carrito","mapDispatchToProps","dispatch","tipo","altura","ancho","onTachaSelected"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport axios from './../../axios';\r\nimport * as actions from \"./../../store/actions/index\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./RespaldoBuilder.module.css\";\r\nimport ContainerRespaldo from \"../../components/Respaldo/Respaldo/ContainerRespaldo\";\r\nimport Formas from \"./../../components/Respaldo/OpcionesRespaldo/Formas/Formas\";\r\nimport Medidas from \"./../../components/Respaldo/OpcionesRespaldo/Medidas/Medidas\";\r\nimport GenerosYColores from \"./../../components/Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores\";\r\nimport Tachas from \"./../../components/Respaldo/OpcionesRespaldo/Tachas/Tachas\";\r\nimport Modelos from \"./../../components/Respaldo/OpcionesRespaldo/Modelos/Modelos\";\r\nimport Colores from \"./../../components/Respaldo/OpcionesRespaldo/Colores/Colores\";\r\nimport Header from './../../components/Respaldo/Header/Header';\r\nimport Spinner from './../../components/Ul/Spinner/Spinner';\r\n\r\n\r\nclass RespaldoBuilder extends Component {\r\n  state = {\r\n    index: 0,\r\n    opciones: null\r\n  };\r\n \r\n  componentDidMount() {\r\n\r\n    axios.get('/opcionesRespaldo.json')\r\n    .then(response => {\r\n      const object=response.data;\r\n      for(let property in object){\r\n        this.setState({opciones: object[property]})\r\n      }\r\n    })\r\n    .catch(error => console.log(error))\r\n\r\n\r\n\r\n\r\n    const baseUrl = \"/respaldo-options/respaldo-builder\";\r\n    const keys = [\r\n      \"\",\r\n      \"/medidas\",\r\n      \"/generosycolores\",\r\n      \"/colores\",\r\n      \"/tachas\",\r\n      \"/modelos\",\r\n    ];\r\n    let location = this.props.history.location.pathname;\r\n\r\n    location = location.replace(baseUrl, \"\");\r\n\r\n    let ind = keys.findIndex((key) => key === location);\r\n    if (ind === -1) {\r\n      return (ind = 0);\r\n    }\r\n    this.setState({ index: ind });\r\n  }\r\n\r\n  render() {\r\n    const keys = [\r\n      \"/\",\r\n      \"/medidas\",\r\n      \"/generosycolores\",\r\n      \"/colores\",\r\n      \"/tachas\",\r\n      \"/modelos\",\r\n    ];\r\n    const baseUrl = \"/respaldo-options/respaldo-builder\";\r\n    const toggleRoutesHandlerLeft = (location) => {\r\n      location = location.replace(baseUrl, \"\");\r\n\r\n      let index = this.state.index;\r\n\r\n      if (keys[index - 1] === undefined) {\r\n        return;\r\n      }\r\n      this.setState({ index: index - 1 });\r\n      \r\n      return this.props.history.push(baseUrl + keys[index - 1]);\r\n    };\r\n\r\n    const toggleRoutesHandlerRight = (location) => {\r\n      location = location.replace(baseUrl, \"\");\r\n\r\n      let index = keys.indexOf(location);\r\n\r\n      if (keys[index + 1] === undefined) {\r\n        return this.props.history.push(\"/resumen-respaldo\");\r\n      }\r\n      if (index === -1) {\r\n        index = 0;\r\n      }\r\n      //condicional: si el usuario no eligio forma no puede seguir:\r\n      if(keys[index + 1] ===  \"/medidas\" && this.props.respaldo.forma === 'no seleccionado'){\r\n        return alert('debe elegir una forma antes de proseguir')\r\n      }else{\r\n        this.setState({ index: index + 1 });\r\n        return this.props.history.push(baseUrl + keys[index + 1]);\r\n      }\r\n    };\r\n\r\n    const tachaSelect = (tamanio, precio)=>{\r\n      console.log(tamanio, precio)\r\n      this.props.onClickOnTacha()\r\n      this.props.onTipoDeTachaSelected(tamanio, precio)\r\n    }\r\n\r\n    if(this.state.opciones){\r\n       return (\r\n      <div className={classes.RespaldoBuilder}>\r\n       <Header \r\n       index={this.state.index}\r\n       toggleLeft={toggleRoutesHandlerLeft}\r\n       toggleRight={toggleRoutesHandlerRight}/>\r\n        <div className={classes.croquisRespaldo}>\r\n          <ContainerRespaldo respaldo={this.props.respaldo}/>\r\n          <div className={classes.precioTotal}>\r\n            Precio Total:\r\n            <strong>${this.props.precioRespaldo.toFixed(2)}</strong>\r\n          </div>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <Switch>\r\n           \r\n            <Route path={baseUrl + \"/medidas\"}>\r\n              <Medidas\r\n              medidaSelected={this.props.respaldo.medida}\r\n                medidas={this.state.opciones.medidas}\r\n                selectMedida={this.props.onMedidaSelected}\r\n              />\r\n            </Route>\r\n            <Route path={baseUrl + \"/generosycolores\"}>\r\n              <GenerosYColores\r\n                generos={this.state.opciones.generosycolores}\r\n                generoSelected={this.props.respaldo.genero}\r\n                selectGenero={this.props.onGeneroSelected}\r\n              />\r\n            </Route>\r\n            <Route path={baseUrl + \"/colores\"}>\r\n              <Colores\r\n                color={this.state.opciones.generosycolores}\r\n                generoParaColor={this.props.respaldo.genero}\r\n                selectColor={this.props.onColorSelected}\r\n                colorSelected={this.props.respaldo.color}\r\n              />\r\n            </Route>\r\n            <Route path={baseUrl + \"/tachas\"}>\r\n              <Tachas\r\n                displayOptions={this.props.displayOptions}\r\n                tachas={this.state.opciones.tachas}\r\n                selectedTacha={this.props.respaldo.tacha}\r\n                selectTacha={tachaSelect}\r\n                selectTipoDeTacha={this.props.onTipoDeTachaSelected}\r\n                tipoDeTacha={this.props.respaldo.tipoDeTacha}\r\n                \r\n              />\r\n            </Route>\r\n            <Route path={baseUrl + \"/modelos\"}>\r\n              <Modelos\r\n                selectModelo={this.props.onModeloSelected}\r\n                selectedModelo={this.props.respaldo.modelo}\r\n                modelos={this.state.opciones.modelos}\r\n              />\r\n            </Route>\r\n            <Route path={baseUrl + \"/\"} exact>\r\n              <Formas\r\n                formas={this.state.opciones.formas}\r\n                selected={this.props.onFormaSelected}\r\n                tachaSelected={this.props.respaldo.forma}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n    }else{\r\n      return <Spinner />\r\n    }\r\n    \r\n   \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    respaldo: state.respaldo.respaldo,\r\n    displayOptions: state.respaldo.displayTachaOptions,\r\n    precioRespaldo: state.respaldo.respaldo.precioParticular,\r\n    basket: state.carrito.basket\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFormaSelected: (tipo, precio) =>\r\n      dispatch(actions.onFormaSelected(tipo, precio)),\r\n    onMedidaSelected: (altura, ancho, precio) =>\r\n      dispatch(actions.onMedidaSelected(altura, ancho, precio)),\r\n    onGeneroSelected: (tipo, precio) =>\r\n      dispatch(actions.onGeneroSelected(tipo, precio)),\r\n    onColorSelected: (color) =>\r\n      dispatch(actions.onColorSelected(color)),\r\n    onTachaSelected: (tamanio, precio) =>\r\n      dispatch(actions.onTachaSelected(tamanio, precio)),\r\n    onTipoDeTachaSelected: (tipo) =>\r\n      dispatch(actions.onTipoDeTachaSelected(tipo)),\r\n    onModeloSelected: (tipo, precio) =>\r\n      dispatch(actions.onModeloSelected(tipo, precio)),\r\n    onClickOnTacha: ()=>dispatch(actions.onClickOnTacha())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RespaldoBuilder);\r\n"]},"metadata":{},"sourceType":"module"}