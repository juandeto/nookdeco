{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\containers\\\\Carrito\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from \"react\";\nimport withErrorHandler from \"./../../../hoc/withErrorHandler/withErrorHandler\";\nimport Input from \"./../../../components/Ul/input/input\";\nimport classes from \"./ContactData.module.css\";\nimport { connect } from \"react-redux\";\nimport Auxiliary from \"./../../../hoc/Auxiliary\";\nimport axios from \"./../../../axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Spinner from \"./../../../components/Ul/Spinner/Spinner\";\nimport CardOptionsEnvio from './../../../components/Ul/CardOptionsEnvio/CardOptionsEnvio';\nimport CardOptionsPagos from './../../../components/Ul/CardOptionPagos/CardOptionsPagos';\nimport * as actions from \"./../../../store/actions/index\";\nimport Modal from './../../../components/Ul/Modal/Modal';\nimport moment from \"moment\";\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        nombre: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Ingresa tu nombre y apellido\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        provincia: {\n          elementType: \"select\",\n          elementConfig: {\n            option: [{\n              value: \"G.B.A (Gran Buenos Aires)\",\n              displayValue: \"Gran Buenos Aires (G.B.A)\"\n            }, {\n              value: \"Buenos Aires Interior\",\n              displayValue: \"Buenos Aires Interior\"\n            }, {\n              value: \"Catamarca\",\n              displayValue: \"Catamarca\"\n            }, {\n              value: \"C.A.B.A\",\n              displayValue: \"C.A.B.A\"\n            }, {\n              value: \"Chaco\",\n              displayValue: \"Chaco\"\n            }, {\n              value: \"Chubut\",\n              displayValue: \"Chubut\"\n            }, {\n              value: \"Cordoba\",\n              displayValue: \"Cordoba\"\n            }, {\n              value: \"Corrientes\",\n              displayValue: \"Corrientes\"\n            }, {\n              value: \"Entre Rios\",\n              displayValue: \"Entre Rios\"\n            }, {\n              value: \"Formosa\",\n              displayValue: \"Formosa\"\n            }, {\n              value: \"Jujuy\",\n              displayValue: \"Jujuy\"\n            }, {\n              value: \"La Pampa\",\n              displayValue: \"La Pampa\"\n            }, {\n              value: \"La Rioja\",\n              displayValue: \"La Rioja\"\n            }, {\n              value: \"Mendoza\",\n              displayValue: \"Mendoza\"\n            }, {\n              value: \"Misiones\",\n              displayValue: \"Misiones\"\n            }, {\n              value: \"Neuquen\",\n              displayValue: \"Neuquen\"\n            }, {\n              value: \"Rio Negro\",\n              displayValue: \"Rio Negro\"\n            }, {\n              value: \"Salta\",\n              displayValue: \"Salta\"\n            }, {\n              value: \"San Juan\",\n              displayValue: \"San Juan\"\n            }, {\n              value: \"San Luis\",\n              displayValue: \"San Luis\"\n            }, {\n              value: \"Santa Cruz\",\n              displayValue: \"Santa Cruz\"\n            }, {\n              value: \"Santa Fe\",\n              displayValue: \"Santa Fe\"\n            }, {\n              value: \"Sgo. del Estero\",\n              displayValue: \"Sgo. del Estero\"\n            }, {\n              value: \"Tierra del Fuego\",\n              displayValue: \"Tierra del Fuego\"\n            }, {\n              value: \"Tucuman\",\n              displayValue: \"Tucuman\"\n            }]\n          },\n          value: \"G.B.A (Gran Buenos Aires)\",\n          validation: {\n            required: true\n          },\n          valid: true,\n          touched: false\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"IngresÃ¡ tu email\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        telefono: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Telefono\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      formIsValid: false,\n      loading: false,\n      submitingBeforeComplete: false\n    };\n\n    this.orderHandler = event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.orderForm) {\n        formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n      }\n\n      let time = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\n      const order = {\n        basket: this.props.basket,\n        price: this.props.price,\n        orderData: formData,\n        formaDePago: this.props.formaDePago,\n        formaDeEnvio: this.props.formaDeEnvio,\n        pagado: false,\n        entregado: false,\n        date: time\n      };\n      axios.post(\"/orders.json\", order).then(response => {\n        this.setState({\n          loading: false\n        }); // \n      }).then(this.props.formaDePago === \"Transferencia Bancaria\" ? this.props.history.push('/pagos') : null).catch(error => console.log(error)); //this.props.onLoading());\n    };\n\n    this.inputChangeHandler = (event, inputIdentifier) => {\n      const updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n      updatedFormElement.touched = true;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      let formIsValid = true;\n\n      for (let inputIdentifier in updatedOrderForm) {\n        formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n      }\n\n      this.setState({\n        orderForm: updatedOrderForm,\n        formIsValid: formIsValid\n      });\n    };\n\n    this.pagoHandler = event => {\n      let formaDePago = event.target.value;\n      this.props.onFormaDePagoSelected(formaDePago);\n    };\n\n    this.envioHandler = event => {\n      let formaDeEnvio = event.target.value;\n      this.props.onSelectFormaDeEnvio(formaDeEnvio);\n    };\n\n    this.submitingBeforeCompleteHandler = event => {\n      event.preventDefault();\n      this.setState({\n        submitingBeforeComplete: !this.state.submitingBeforeComplete\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const arrayClasses = [classes.submitBtn, classes.disabled];\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.ContactData,\n      onSubmit: this.props.formaDeEnvio !== null && this.props.formaDePago !== null && this.props.basket.length !== 0 && this.state.formIsValid ? this.orderHandler : this.submitingBeforeCompleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, this.state.submitingBeforeComplete ? /*#__PURE__*/React.createElement(Modal, {\n      modalClosed: this.submitingBeforeCompleteHandler,\n      show: this.state.submitingBeforeComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 52\n      }\n    }, \"Por favor, complete todos los datos requeridos antes de enviar el formulario\")) : null, /*#__PURE__*/React.createElement(CardOptionsEnvio, {\n      formaDeEnvio: this.props.formaDeEnvio,\n      envioSelected: this.envioHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.datosContacto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, \"Datos de contacto\"), formElementsArray.map(formElement => {\n      return /*#__PURE__*/React.createElement(Input, {\n        key: formElement.id,\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        invalid: !formElement.config.valid,\n        shouldValidate: formElement.config.validation,\n        touched: formElement.config.touched,\n        changed: event => this.inputChangeHandler(event, formElement.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      });\n    }), /*#__PURE__*/React.createElement(CardOptionsPagos, {\n      formaDePago: this.props.formaDePago,\n      formaDePagoSelected: this.pagoHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: this.props.formaDeEnvio !== null && this.props.formaDePago !== null && this.props.basket.length !== 0 && this.state.formIsValid ? arrayClasses[0] : arrayClasses.join(\" \"),\n      disabled: this.props.formaDeEnvio === null && this.props.formaDePago === null && !this.state.formIsValid && this.props.basket.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, \"Proceder al pago\"));\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 12\n      }\n    }, form);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    basket: state.carrito.basket,\n    price: state.carrito.totalPrice,\n    formaDePago: state.carrito.formaDePago,\n    formaDeEnvio: state.carrito.formaDeEnvio\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateOrder: order => dispatch(actions.onCreateOrder(order)),\n    onFormaDePagoSelected: formaDePago => dispatch(actions.onSelectFormaDePago(formaDePago)),\n    onSelectFormaDeEnvio: formaDeEnvio => dispatch(actions.onSelectFormaDeEnvio(formaDeEnvio))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withErrorHandler(ContactData, axios))); //this.props.basket.length === 0 &&","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/containers/Carrito/ContactData/ContactData.js"],"names":["React","Component","withErrorHandler","Input","classes","connect","Auxiliary","axios","withRouter","Spinner","CardOptionsEnvio","CardOptionsPagos","actions","Modal","moment","ContactData","state","orderForm","nombre","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","provincia","option","displayValue","email","telefono","formIsValid","loading","submitingBeforeComplete","orderHandler","event","setState","preventDefault","formData","formElementIdentifier","time","format","order","basket","props","price","orderData","formaDePago","formaDeEnvio","pagado","entregado","date","post","then","response","history","push","catch","error","console","log","inputChangeHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","pagoHandler","onFormaDePagoSelected","envioHandler","onSelectFormaDeEnvio","submitingBeforeCompleteHandler","rules","isValid","trim","minLength","length","render","arrayClasses","submitBtn","disabled","formElementsArray","key","id","config","form","datosContacto","map","formElement","join","mapStateToProps","carrito","totalPrice","mapDispatchToProps","dispatch","onCreateOrder","onSelectFormaDePago"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport withErrorHandler from \"./../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Input from \"./../../../components/Ul/input/input\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxiliary from \"./../../../hoc/Auxiliary\";\r\nimport axios from \"./../../../axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"./../../../components/Ul/Spinner/Spinner\";\r\nimport CardOptionsEnvio from './../../../components/Ul/CardOptionsEnvio/CardOptionsEnvio';\r\nimport CardOptionsPagos from './../../../components/Ul/CardOptionPagos/CardOptionsPagos';\r\nimport * as actions from \"./../../../store/actions/index\";\r\nimport Modal from './../../../components/Ul/Modal/Modal';\r\n\r\nimport moment from \"moment\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      nombre: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Ingresa tu nombre y apellido\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      provincia: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          option: [\r\n            {\r\n              value: \"G.B.A (Gran Buenos Aires)\",\r\n              displayValue: \"Gran Buenos Aires (G.B.A)\",\r\n            },\r\n            {\r\n              value: \"Buenos Aires Interior\",\r\n              displayValue: \"Buenos Aires Interior\",\r\n            },\r\n            { value: \"Catamarca\", displayValue: \"Catamarca\" },\r\n            { value: \"C.A.B.A\", displayValue: \"C.A.B.A\" },\r\n            { value: \"Chaco\", displayValue: \"Chaco\" },\r\n            { value: \"Chubut\", displayValue: \"Chubut\" },\r\n            { value: \"Cordoba\", displayValue: \"Cordoba\" },\r\n            { value: \"Corrientes\", displayValue: \"Corrientes\" },\r\n            { value: \"Entre Rios\", displayValue: \"Entre Rios\" },\r\n            { value: \"Formosa\", displayValue: \"Formosa\" },\r\n            { value: \"Jujuy\", displayValue: \"Jujuy\" },\r\n            { value: \"La Pampa\", displayValue: \"La Pampa\" },\r\n            { value: \"La Rioja\", displayValue: \"La Rioja\" },\r\n            { value: \"Mendoza\", displayValue: \"Mendoza\" },\r\n            { value: \"Misiones\", displayValue: \"Misiones\" },\r\n            { value: \"Neuquen\", displayValue: \"Neuquen\" },\r\n            { value: \"Rio Negro\", displayValue: \"Rio Negro\" },\r\n            { value: \"Salta\", displayValue: \"Salta\" },\r\n            { value: \"San Juan\", displayValue: \"San Juan\" },\r\n            { value: \"San Luis\", displayValue: \"San Luis\" },\r\n            { value: \"Santa Cruz\", displayValue: \"Santa Cruz\" },\r\n            { value: \"Santa Fe\", displayValue: \"Santa Fe\" },\r\n            { value: \"Sgo. del Estero\", displayValue: \"Sgo. del Estero\" },\r\n            { value: \"Tierra del Fuego\", displayValue: \"Tierra del Fuego\" },\r\n            { value: \"Tucuman\", displayValue: \"Tucuman\" },\r\n          ],\r\n        },\r\n        value: \"G.B.A (Gran Buenos Aires)\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"IngresÃ¡ tu email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      telefono: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Telefono\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n    loading: false,\r\n    submitingBeforeComplete: false\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    this.setState({ loading: true });\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    let time = moment().format(\"MMMM Do YYYY, h:mm:ss a\");\r\n    const order = {\r\n      basket: this.props.basket,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      formaDePago: this.props.formaDePago,\r\n      formaDeEnvio: this.props.formaDeEnvio,\r\n      pagado: false,\r\n      entregado: false,\r\n      date: time,\r\n    };\r\n\r\n    axios\r\n      .post(\"/orders.json\", order)\r\n      .then((response) => {\r\n        this.setState({ loading: false });\r\n        // \r\n      })\r\n      .then(\r\n        this.props.formaDePago === \"Transferencia Bancaria\"?\r\n        this.props.history.push('/pagos') \r\n        : null    \r\n      )\r\n      .catch((error) => console.log(error)); //this.props.onLoading());\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangeHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm,\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputIdentifier],\r\n    };\r\n\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  pagoHandler = (event) => {\r\n    let formaDePago = event.target.value;\r\n    this.props.onFormaDePagoSelected(formaDePago);\r\n  };\r\n\r\n  envioHandler =(event) =>{\r\n    let formaDeEnvio = event.target.value;\r\n    this.props.onSelectFormaDeEnvio(formaDeEnvio)\r\n  }\r\n\r\n  submitingBeforeCompleteHandler = (event) =>{\r\n    event.preventDefault();\r\n    this.setState({submitingBeforeComplete: !this.state.submitingBeforeComplete})\r\n  }\r\n\r\n  render() {\r\n    const arrayClasses = [classes.submitBtn, classes.disabled];\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form className={classes.ContactData} onSubmit={\r\n        this.props.formaDeEnvio !== null &&\r\n        this.props.formaDePago !== null &&\r\n        this.props.basket.length !== 0 &&\r\n        this.state.formIsValid ?\r\n        this.orderHandler : this.submitingBeforeCompleteHandler\r\n      }>\r\n        {\r\n         this.state.submitingBeforeComplete ? \r\n         <Modal \r\n         modalClosed={this.submitingBeforeCompleteHandler}\r\n         show={this.state.submitingBeforeComplete}><p>Por favor, complete todos los datos requeridos antes de enviar el formulario</p></Modal> : null\r\n        }\r\n        <CardOptionsEnvio formaDeEnvio={this.props.formaDeEnvio} envioSelected={this.envioHandler}/>\r\n        <h4 className={classes.datosContacto}>Datos de contacto</h4>\r\n        {formElementsArray.map((formElement) => {\r\n          return (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              elementConfig={formElement.config.elementConfig}\r\n              value={formElement.config.value}\r\n              invalid={!formElement.config.valid}\r\n              shouldValidate={formElement.config.validation}\r\n              touched={formElement.config.touched}\r\n              changed={(event) =>\r\n                this.inputChangeHandler(event, formElement.id)\r\n              }\r\n            />\r\n          );\r\n        })}\r\n\r\n        <CardOptionsPagos formaDePago={this.props.formaDePago} formaDePagoSelected={this.pagoHandler} />\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          className={\r\n            this.props.formaDeEnvio !== null &&\r\n            this.props.formaDePago !== null &&\r\n            this.props.basket.length !== 0 &&\r\n            this.state.formIsValid\r\n              ? arrayClasses[0]\r\n              : arrayClasses.join(\" \")\r\n          }\r\n          disabled={\r\n            this.props.formaDeEnvio === null &&\r\n            this.props.formaDePago === null &&\r\n            !this.state.formIsValid &&\r\n            this.props.basket.length === 0\r\n          }\r\n        >\r\n          Proceder al pago\r\n        </button>\r\n      </form>\r\n    );\r\n    if (this.state.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    return <Auxiliary>{form}</Auxiliary>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    basket: state.carrito.basket,\r\n    price: state.carrito.totalPrice,\r\n    formaDePago: state.carrito.formaDePago,\r\n    formaDeEnvio: state.carrito.formaDeEnvio\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreateOrder: (order) => dispatch(actions.onCreateOrder(order)),\r\n    onFormaDePagoSelected: (formaDePago) =>\r\n      dispatch(actions.onSelectFormaDePago(formaDePago)),\r\n    onSelectFormaDeEnvio: (formaDeEnvio)=>dispatch(actions.onSelectFormaDeEnvio(formaDeEnvio))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(withErrorHandler(ContactData, axios)));\r\n\r\n//this.props.basket.length === 0 &&\r\n"]},"metadata":{},"sourceType":"module"}