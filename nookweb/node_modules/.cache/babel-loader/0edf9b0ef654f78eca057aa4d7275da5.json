{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\paginanook\\\\nookweb\\\\src\\\\components\\\\Slider\\\\Slider.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport Formas from './../Respaldo/OpcionesRespaldo/Formas/Formas';\nimport Medidas from './../Respaldo/OpcionesRespaldo/Medidas/Medidas';\nimport Modelos from './../Respaldo/OpcionesRespaldo/Modelos/Modelos';\nimport Generos from './../Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores';\nimport Colores from './../Respaldo/OpcionesRespaldo/Colores/Colores';\nimport Tachas from './../Respaldo/OpcionesRespaldo/Tachas/Tachas';\nimport \"./slider.css\";\n\nconst Slider = () => {\n  let sliderArr = [/*#__PURE__*/React.createElement(Formas, {\n    formas: this.state.opciones.formas,\n    selected: this.props.onFormaSelected,\n    tachaSelected: this.props.respaldo.forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Medidas, {\n    medidaSelected: this.props.respaldo.medida,\n    medidas: this.state.opciones.medidas,\n    selectMedida: this.props.onMedidaSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Modelos, {\n    selectModelo: this.props.onModeloSelected,\n    selectedModelo: this.props.respaldo.modelo,\n    modelos: this.state.opciones.modelos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(GenerosYColores, {\n    generos: this.state.opciones.generos,\n    generoSelected: this.props.respaldo.genero,\n    selectGenero: this.props.onGeneroSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Colores, {\n    color: this.state.opciones.generos,\n    generoParaColor: this.props.respaldo.genero,\n    selectColor: this.props.onColorSelected,\n    colorSelected: this.props.respaldo.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Tachas, {\n    displayOptions: this.props.displayOptions,\n    tachas: this.state.opciones.tachas,\n    selectedTacha: this.props.respaldo.tacha,\n    selectTacha: tachaSelect,\n    selectTipoDeTacha: tipoDeTachaSelect,\n    tipoDeTacha: this.props.respaldo.tipoTacha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  })];\n  const [x, setX] = useState(0);\n\n  const goLeft = () => {\n    console.log(x);\n    x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\n  };\n\n  const goRight = () => {\n    x === -100 * (sliderArr.length - 1) ? setX(0) : setX(x - 100);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, sliderArr.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"slide\",\n      style: {\n        transform: `translateX(${x}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, item);\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-styles\",\n    id: \"goLeft\",\n    onClick: goLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"left\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-styles\",\n    id: \"goRight\",\n    onClick: goRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"right\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    respaldo: state.respaldo.respaldo,\n    displayOptions: state.respaldo.displayTachaOptions,\n    precioRespaldo: state.respaldo.respaldo.precioParticular,\n    basket: state.carrito.basket\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormaSelected: (tipo, precio) => dispatch(actions.onFormaSelected(tipo, precio)),\n    onMedidaSelected: (altura, ancho, precio) => dispatch(actions.onMedidaSelected(altura, ancho, precio)),\n    onGeneroSelected: (tipo, precio) => dispatch(actions.onGeneroSelected(tipo, precio)),\n    onColorSelected: color => dispatch(actions.onColorSelected(color)),\n    onTachaSelected: (tamanio, precio) => dispatch(actions.onTachaSelected(tamanio, precio)),\n    onTipoDeTachaSelected: tipo => dispatch(actions.onTipoDeTachaSelected(tipo)),\n    onModeloSelected: (tipo, precio) => dispatch(actions.onModeloSelected(tipo, precio)),\n    onClickOnTacha: () => dispatch(actions.onClickOnTacha())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Slider);","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/components/Slider/Slider.js"],"names":["React","useState","connect","Formas","Medidas","Modelos","Generos","Colores","Tachas","Slider","sliderArr","state","opciones","formas","props","onFormaSelected","respaldo","forma","medida","medidas","onMedidaSelected","onModeloSelected","modelo","modelos","generos","genero","onGeneroSelected","onColorSelected","color","displayOptions","tachas","tacha","tachaSelect","tipoDeTachaSelect","tipoTacha","x","setX","goLeft","console","log","length","goRight","map","item","index","transform","mapStateToProps","displayTachaOptions","precioRespaldo","precioParticular","basket","carrito","mapDispatchToProps","dispatch","tipo","precio","actions","altura","ancho","onTachaSelected","tamanio","onTipoDeTachaSelected","onClickOnTacha"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,OAAOC,OAAP,MAAoB,gEAApB;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AAEA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,MAAIC,SAAS,GAAG,cAChB,oBAAC,MAAD;AACc,IAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAD1C;AAEc,IAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,eAFnC;AAGc,IAAA,aAAa,EAAE,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,KAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,eAMhB,oBAAC,OAAD;AACE,IAAA,cAAc,EAAE,KAAKH,KAAL,CAAWE,QAAX,CAAoBE,MADtC;AAEI,IAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,OAFjC;AAGI,IAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,gBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANgB,eAWhB,oBAAC,OAAD;AACE,IAAA,YAAY,EAAE,KAAKN,KAAL,CAAWO,gBAD3B;AAEE,IAAA,cAAc,EAAE,KAAKP,KAAL,CAAWE,QAAX,CAAoBM,MAFtC;AAGE,IAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,OAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXgB,eAgBhB,oBAAC,eAAD;AACc,IAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,OAD3C;AAEc,IAAA,cAAc,EAAE,KAAKV,KAAL,CAAWE,QAAX,CAAoBS,MAFlD;AAGc,IAAA,YAAY,EAAE,KAAKX,KAAL,CAAWY,gBAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBgB,eAqBhB,oBAAC,OAAD;AACY,IAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,QAAX,CAAoBY,OADvC;AAEY,IAAA,eAAe,EAAE,KAAKV,KAAL,CAAWE,QAAX,CAAoBS,MAFjD;AAGY,IAAA,WAAW,EAAE,KAAKX,KAAL,CAAWa,eAHpC;AAIY,IAAA,aAAa,EAAE,KAAKb,KAAL,CAAWE,QAAX,CAAoBY,KAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBgB,eA2BhB,oBAAC,MAAD;AACU,IAAA,cAAc,EAAE,KAAKd,KAAL,CAAWe,cADrC;AAEU,IAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWC,QAAX,CAAoBkB,MAFtC;AAGU,IAAA,aAAa,EAAE,KAAKhB,KAAL,CAAWE,QAAX,CAAoBe,KAH7C;AAIU,IAAA,WAAW,EAAEC,WAJvB;AAKU,IAAA,iBAAiB,EAAEC,iBAL7B;AAMU,IAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWE,QAAX,CAAoBkB,SAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BgB,CAAhB;AAqCA,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAUnC,QAAQ,CAAC,CAAD,CAAxB;;AAEA,QAAMoC,MAAM,GAAG,MAAK;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACAA,IAAAA,CAAC,KAAI,CAAL,GAASC,IAAI,CAAC,CAAC,GAAD,IAAM1B,SAAS,CAAC8B,MAAV,GAAiB,CAAvB,CAAD,CAAb,GAA2CJ,IAAI,CAACD,CAAC,GAAG,GAAL,CAA/C;AACD,GAHD;;AAKA,QAAMM,OAAO,GAAG,MAAK;AAEnBN,IAAAA,CAAC,KAAI,CAAC,GAAD,IAAMzB,SAAS,CAAC8B,MAAV,GAAiB,CAAvB,CAAL,GAAiCJ,IAAI,CAAC,CAAD,CAArC,GAA2CA,IAAI,CAACD,CAAC,GAAC,GAAH,CAA/C;AACH,GAHC;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,SAAS,CAACgC,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,wBACE;AAAK,MAAA,GAAG,EAAEA,KAAV;AACA,MAAA,SAAS,EAAC,OADV;AAEA,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG,cAAaV,CAAE;AAA5B,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGQ,IAHH,CADF;AAOD,GARA,CADH,eAUE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,EAAE,EAAC,QAAlC;AAA2C,IAAA,OAAO,EAAEN,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,EAAE,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEI,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,CADF;AAmBD,CApED;;AAsEA,MAAMK,eAAe,GAAInC,KAAD,IAAW;AAC/B,SAAO;AACLK,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeA,QADpB;AAELa,IAAAA,cAAc,EAAElB,KAAK,CAACK,QAAN,CAAe+B,mBAF1B;AAGLC,IAAAA,cAAc,EAAErC,KAAK,CAACK,QAAN,CAAeA,QAAf,CAAwBiC,gBAHnC;AAILC,IAAAA,MAAM,EAAEvC,KAAK,CAACwC,OAAN,CAAcD;AAJjB,GAAP;AAMD,CAPH;;AASE,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLtC,IAAAA,eAAe,EAAE,CAACuC,IAAD,EAAOC,MAAP,KACfF,QAAQ,CAACG,OAAO,CAACzC,eAAR,CAAwBuC,IAAxB,EAA8BC,MAA9B,CAAD,CAFL;AAGLnC,IAAAA,gBAAgB,EAAE,CAACqC,MAAD,EAASC,KAAT,EAAgBH,MAAhB,KAChBF,QAAQ,CAACG,OAAO,CAACpC,gBAAR,CAAyBqC,MAAzB,EAAiCC,KAAjC,EAAwCH,MAAxC,CAAD,CAJL;AAKL7B,IAAAA,gBAAgB,EAAE,CAAC4B,IAAD,EAAOC,MAAP,KAChBF,QAAQ,CAACG,OAAO,CAAC9B,gBAAR,CAAyB4B,IAAzB,EAA+BC,MAA/B,CAAD,CANL;AAOL5B,IAAAA,eAAe,EAAGC,KAAD,IACfyB,QAAQ,CAACG,OAAO,CAAC7B,eAAR,CAAwBC,KAAxB,CAAD,CARL;AASL+B,IAAAA,eAAe,EAAE,CAACC,OAAD,EAAUL,MAAV,KACfF,QAAQ,CAACG,OAAO,CAACG,eAAR,CAAwBC,OAAxB,EAAiCL,MAAjC,CAAD,CAVL;AAWLM,IAAAA,qBAAqB,EAAGP,IAAD,IACrBD,QAAQ,CAACG,OAAO,CAACK,qBAAR,CAA8BP,IAA9B,CAAD,CAZL;AAaLjC,IAAAA,gBAAgB,EAAE,CAACiC,IAAD,EAAOC,MAAP,KAChBF,QAAQ,CAACG,OAAO,CAACnC,gBAAR,CAAyBiC,IAAzB,EAA+BC,MAA/B,CAAD,CAdL;AAeLO,IAAAA,cAAc,EAAE,MAAIT,QAAQ,CAACG,OAAO,CAACM,cAAR,EAAD;AAfvB,GAAP;AAiBD,CAlBD;;AAoBF,eAAe5D,OAAO,CAAC4C,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C3C,MAA7C,CAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport Formas from './../Respaldo/OpcionesRespaldo/Formas/Formas';\r\nimport Medidas from './../Respaldo/OpcionesRespaldo/Medidas/Medidas';\r\nimport Modelos from './../Respaldo/OpcionesRespaldo/Modelos/Modelos'\r\nimport Generos from './../Respaldo/OpcionesRespaldo/GenerosYColores/GenerosYColores';\r\nimport Colores from './../Respaldo/OpcionesRespaldo/Colores/Colores';\r\nimport Tachas from './../Respaldo/OpcionesRespaldo/Tachas/Tachas';\r\n\r\nimport \"./slider.css\";\r\n\r\nconst Slider = () => {\r\n  let sliderArr = [ \r\n  <Formas\r\n                formas={this.state.opciones.formas}\r\n                selected={this.props.onFormaSelected}\r\n                tachaSelected={this.props.respaldo.forma}\r\n              />,\r\n  <Medidas\r\n    medidaSelected={this.props.respaldo.medida}\r\n      medidas={this.state.opciones.medidas}\r\n      selectMedida={this.props.onMedidaSelected}\r\n    />,\r\n  <Modelos\r\n    selectModelo={this.props.onModeloSelected}\r\n    selectedModelo={this.props.respaldo.modelo}\r\n    modelos={this.state.opciones.modelos}\r\n              />,\r\n  <GenerosYColores\r\n                generos={this.state.opciones.generos}\r\n                generoSelected={this.props.respaldo.genero}\r\n                selectGenero={this.props.onGeneroSelected}\r\n              />,\r\n  <Colores\r\n              color={this.state.opciones.generos}\r\n              generoParaColor={this.props.respaldo.genero}\r\n              selectColor={this.props.onColorSelected}\r\n              colorSelected={this.props.respaldo.color}\r\n            />,\r\n  <Tachas\r\n            displayOptions={this.props.displayOptions}\r\n            tachas={this.state.opciones.tachas}\r\n            selectedTacha={this.props.respaldo.tacha}\r\n            selectTacha={tachaSelect}\r\n            selectTipoDeTacha={tipoDeTachaSelect}\r\n            tipoDeTacha={this.props.respaldo.tipoTacha}\r\n            \r\n          />\r\n  ];\r\n  const [x, setX]=useState(0)\r\n\r\n  const goLeft = () =>{\r\n    console.log(x);\r\n    x=== 0 ? setX(-100*(sliderArr.length-1)) : setX(x + 100)\r\n  }\r\n\r\n  const goRight = () =>{\r\n      \r\n    x=== -100*(sliderArr.length-1) ? setX(0) : setX(x-100)\r\n}\r\n  return (\r\n    <div className=\"slider\">\r\n      {sliderArr.map((item, index) => {\r\n        return (\r\n          <div key={index} \r\n          className=\"slide\"\r\n          style={{transform: `translateX(${x}%)`}}>\r\n            {item}\r\n          </div>\r\n        );\r\n      })}\r\n      <button className=\"btn-styles\" id=\"goLeft\" onClick={goLeft}>\r\n        left\r\n      </button>\r\n      <button className=\"btn-styles\" id=\"goRight\" onClick={goRight}>\r\n        right\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      respaldo: state.respaldo.respaldo,\r\n      displayOptions: state.respaldo.displayTachaOptions,\r\n      precioRespaldo: state.respaldo.respaldo.precioParticular,\r\n      basket: state.carrito.basket\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onFormaSelected: (tipo, precio) =>\r\n        dispatch(actions.onFormaSelected(tipo, precio)),\r\n      onMedidaSelected: (altura, ancho, precio) =>\r\n        dispatch(actions.onMedidaSelected(altura, ancho, precio)),\r\n      onGeneroSelected: (tipo, precio) =>\r\n        dispatch(actions.onGeneroSelected(tipo, precio)),\r\n      onColorSelected: (color) =>\r\n        dispatch(actions.onColorSelected(color)),\r\n      onTachaSelected: (tamanio, precio) =>\r\n        dispatch(actions.onTachaSelected(tamanio, precio)),\r\n      onTipoDeTachaSelected: (tipo) =>\r\n        dispatch(actions.onTipoDeTachaSelected(tipo)),\r\n      onModeloSelected: (tipo, precio) =>\r\n        dispatch(actions.onModeloSelected(tipo, precio)),\r\n      onClickOnTacha: ()=>dispatch(actions.onClickOnTacha())\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Slider);\r\n"]},"metadata":{},"sourceType":"module"}