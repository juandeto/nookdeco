{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    authdata: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authdata = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCg_f21k9-OQtnQJtmreOtrJMJcW4EC7II', authdata).then(response => {\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate > new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout(expirationDate.getSeconds() - new Date()));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Juan/Desktop/paginanook/nookweb/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","authdata","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","returnSecureToken","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","authCheckState","getItem","getSeconds"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () =>{\r\n    return{\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) =>{\r\n    return{\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\n\r\nexport const authFail = (error) =>{\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        authdata: error\r\n    }\r\n}\r\n\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) =>{\r\n    return dispatch =>{\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password) =>{\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authdata={\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCg_f21k9-OQtnQJtmreOtrJMJcW4EC7II', authdata)\r\n        .then(response =>{\r\n            const expirationDate= new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () =>{\r\n    return dispatch =>{\r\n        const token =localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if( expirationDate > new Date){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout(expirationDate.getSeconds() - new Date()));\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}